{"version":3,"sources":["components/Home/HomeComponent.js","redux/actionTypes/cartActionTypes.js","components/Products/Products.js","components/Cart/Cart.js","components/LoginComponent/LoginComponent.js","redux/actionTypes/authActionTypes.js","components/ProductViewComponent/ProductViewComponent.js","redux/actionTypes/productsActionTypes.js","components/UserProfile/UserProfile.js","redux/actionTypes/userProfileActionTypes.js","components/MyOrders/MyOrders.js","components/MyProfile/MyProfile.js","components/SignUp/SignUpComponent.js","routes/routes.js","redux/reducers/productsListReducer.js","redux/reducers/cartReducer.js","redux/reducers/userProfileReducer.js","redux/reducers/authReducer.js","redux/rootReducer.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["HomeComponent","to","addItemToCart","item","type","payload","updateQuantity","newQuantity","productID","ProductsComponent","props","productDetailedView","id","console","log","history","push","this","prodList","productsList","class","map","prod","index","key","src","imgUrl","alt","className","name","price","currency","onClick","React","Component","mapDispatchToProps","connect","state","CartComponent","event","target","value","grandTotal","totalQuantity","scope","selectedItems","quantity","onChange","updateQnty","itemTotalPrice","cartList","LoginComponent","inputHandler","fieldName","currentTarget","fieldValue","setState","loginForm","authenticateUser","preventDefault","axios","post","BE_BASEURL","then","res","data","accessToken","login","alert","catch","err","usernameOrEmail","password","googleresponse","Name","profileObj","email","token","googleId","Image","imageUrl","ProviderId","responseGoogle","response","signup","style","clientId","buttonText","onSuccess","onFailure","placeholder","href","isAuth","auth","ProductViewComponent","current","prodId","match","params","productId","i","brand","make","remarks","getProductByID","getProducts","saveUserProfile","user","userInfo","onChangeProfileInfo","for","required","classNameName","MyProfile","path","component","UserProfile","MyOrders","SignUpComponent","createAccount","singUpForm","success","message","username","RoutesComponents","process","basename","logout","initialState","intialState","combineReducers","action","currentProduct","inCartItem","find","inCartItemCurrent","parseInt","reduce","total","each","userProfile","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION__","compose","store","createStore","rootReducer","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.0a0e6cf7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst HomeComponent = () => {\r\n    return (<h1>Please visit <NavLink to=\"/products\">Products</NavLink> page to buy world class items</h1>);\r\n}\r\n\r\nexport default HomeComponent;","\r\nexport const addItemToCart = (item) => ({\r\n    type : \"ADD_ITEM_TO_CART\",\r\n    payload : item\r\n})\r\n\r\nexport const updateQuantity = (newQuantity,productID) => ({\r\n            type: \"UPDATE_QUANTITY\",\r\n            newQuantity,productID\r\n})\r\n\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from \"react-redux\";\r\nimport { addItemToCart } from \"../../redux/actionTypes/cartActionTypes\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import xx from \"./Products.json\";\r\n\r\n// import w from \"./images/w.jpg\"\r\nimport \"./Products.css\"\r\n\r\nclass ProductsComponent extends React.Component {\r\n\r\n    // addToCart = () => {\r\n    //     console.log(\"Add to cart\");\r\n    // }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    //onClick={()=>this.productDetailedView(prod.id)}\r\n    productDetailedView = (id) => {\r\n        console.log(id)\r\n        this.props.history.push(`/product-view/${id}`)\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(xx)\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props);\r\n        const prodList = this.props.productsList\r\n        return (\r\n            <div class=\"container page-top\">\r\n            <div class=\"row\">\r\n                {\r\n                    prodList.map((prod, index) => {\r\n                        return (\r\n                        <div class=\"col-lg-3 col-md-4 col-xs-6 thumb\" key={index}>\r\n                        <NavLink to={`/product-view/${prod.productID}`}>\r\n                        <img  src={prod.imgUrl} class=\"zoom img-fluid \"  alt=\"\"/>\r\n                        </NavLink>\r\n                        <div className=\"card-body product-card-body\">\r\n                            <h5 className=\"card-title\">{prod.name}</h5>\r\n                        <div className=\"card-text\" >{prod.price} - {prod.currency}</div>\r\n                            <div className=\"btn btn-primary\" onClick={()=>this.props.addItemToCart(prod)}>Add to Cart</div>\r\n                        </div>\r\n                        </div>\r\n                        )\r\n                    })\r\n                }   \r\n           </div>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n ...state\r\n})\r\n\r\nconst mapDispatchToProps =  {\r\n    addItemToCart\r\n}\r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(ProductsComponent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateQuantity } from \"../../redux/actionTypes/cartActionTypes\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Cart.css\"\r\nclass CartComponent extends React.Component {\r\n\r\n    updateQnty(event, productID) {\r\n        console.log(event.target.value);\r\n        let newQuantity = event.target.value\r\n        this.props.updateQuantity(newQuantity, productID)\r\n    }\r\n    render () {\r\n        return (\r\n            \r\n        <div className=\"container cart-container\">\r\n            <div className=\"\">\r\n            <div>Grand Total & Quantity : {this.props.grandTotal} & {this.props.totalQuantity}</div><br/>\r\n            \r\n                <div className=\"col-12\">\r\n                    <table className=\"table table-image\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">Product ID</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Product Name</th>\r\n                        <th scope=\"col\">Quantity</th>\r\n                        <th scope=\"col\">New Quantity</th>\r\n                        <th scope=\"col\">Price/Each</th>\r\n                        <th scope=\"col\">Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.props.selectedItems.map(item => {\r\n                            return (<tr>\r\n                                <td scope=\"row\">{item.productID}</td>\r\n                                <td className=\"w-25\">\r\n                                    <NavLink to={`/product-view/${item.productID}`}>\r\n                                     <img src={item.imgUrl} className=\"img-fluid cart-image-width img-thumbnail\"\r\n                                      alt={item.name}/>\r\n                                    </NavLink>\r\n                                </td>\r\n                                <td>{item.name}</td>\r\n                                <td><button>+</button>{item.quantity}<button>-</button></td>\r\n                                <td> \r\n                                    <input type=\"text\" onChange={(event)=>this.updateQnty(event, item.productID)}/>\r\n                                </td>\r\n                                <td>{item.price} - {item.currency}</td>\r\n                                <td>{item.itemTotalPrice}</td>\r\n                            </tr>)\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                    </table>  \r\n                    <div>Grand Total : {this.props.grandTotal}</div> \r\n                    <div>Grand Quantity : {this.props.totalQuantity}</div>\r\n                    <input type=\"submit\" value=\"Checkout\" class=\"btn float-right login_btn\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n                        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    selectedItems : state.cartList.selectedItems,\r\n    grandTotal : state.cartList.grandTotal,\r\n    totalQuantity: state.cartList.totalQuantity\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    updateQuantity\r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(CartComponent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport GoogleLogin from 'react-google-login';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport { login } from \"../../redux/actionTypes/authActionTypes\";\r\n\r\nimport './login.css';\r\n\r\n//axios.defaults.baseURL = 'https://api.example.com';\r\n//axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\n//axios.defaults.headers.common['Access-Control-Allow-Method'] = 'DELETE, POST, GET, OPTIONS';\r\n//axios.defaults.headers.common['Access-Control-Allow-Headers'] = '\"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"';\r\n\r\n//axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\nclass LoginComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        loginForm : {\r\n          usernameOrEmail : \"\",\r\n            password : \"\"\r\n    }\r\n    }\r\n}\r\n\r\n    signup(res) {\r\n        \r\n            const googleresponse = {\r\n        \r\n              Name: res.profileObj.name,\r\n        \r\n              email: res.profileObj.email,\r\n        \r\n              token: res.googleId,\r\n        \r\n              Image: res.profileObj.imageUrl,\r\n        \r\n              ProviderId: 'Google'\r\n        \r\n            };\r\n        \r\n            console.log(googleresponse);\r\n            this.props.history.push('/products')\r\n            \r\n        \r\n            // axios.post('http://localhost:60200/Api/Login/SocialmediaData', googleresponse)\r\n        \r\n            //   .then((result) => {\r\n        \r\n            //     let responseJson = result;\r\n        \r\n            //     sessionStorage.setItem(\"userData\", JSON.stringify(result));\r\n        \r\n            //     this.props.history.push('/Dashboard')\r\n        \r\n            //   });\r\n        \r\n          };\r\n\r\n    inputHandler = (event) => {\r\n      let fieldName =event.currentTarget.name;\r\n      let fieldValue = event.target.value;\r\n\r\n      this.setState((state) => {\r\n        state.loginForm[fieldName] = fieldValue;\r\n    })\r\n\r\n    }\r\n\r\n    authenticateUser = (event) => {\r\n      event.preventDefault();\r\n        axios.post(BE_BASEURL+\"/api/auth/signin\", this.state.loginForm,\r\n        {\r\n          //headers : {authorization :\"Basic \"+ window.btoa(INSTRUCTOR + \":\" + PASSWORD)}\r\n        })\r\n        .then((res)=> {\r\n            console.log(res);\r\n            if (res.data.accessToken) {\r\n                //this.props.history.push(\"/products\");\r\n                this.props.login(res.data);\r\n                this.props.history.push('/products')\r\n            } else {\r\n                alert(\"Login failed\");\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    \r\n    render () {\r\n\r\n\r\n        const responseGoogle = (response) => {\r\n        \r\n            console.log(response);\r\n      \r\n            var res = response.profileObj;\r\n      \r\n            console.log(res);\r\n      \r\n            //debugger;\r\n      \r\n            this.signup(response);\r\n      \r\n          }\r\n\r\n        return (\r\n            \r\n        <div className=\"container\">\r\n\r\n        <div className=\"row\">\r\n\r\n          <div style={{ 'paddingTop': \"20px\" }} className=\"col-sm-12\">\r\n\r\n            <div className=\"col-sm-4\"></div>\r\n\r\n            <div className=\"col-sm-4\">\r\n\r\n              <GoogleLogin\r\n\r\n                clientId=\"464944719379-h84i67v34o9ivp8h49np2htm96bjsj08.apps.googleusercontent.com\"\r\n\r\n                buttonText=\"Login with Google\"\r\n\r\n                onSuccess={responseGoogle}\r\n\r\n                onFailure={responseGoogle} ></GoogleLogin>\r\n\r\n            </div>\r\n\r\n            <div className=\"col-sm-4\"></div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"container\">\r\n\t<div class=\"d-flex justify-content-center h-100\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<div class=\"card-header\">\r\n\t\t\t\t<h3>Sign In</h3>\r\n\t\t\t\t<div class=\"d-flex justify-content-end social_icon\">\r\n\t\t\t\t\t<span><i class=\"fab fa-facebook-square\"></i></span>\r\n\t\t\t\t\t<span><i class=\"fab fa-google-plus-square\"></i></span>\r\n\t\t\t\t\t<span><i class=\"fab fa-twitter-square\"></i></span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"card-body\">\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<div class=\"input-group form-group\">\r\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"usernameOrEmail\" class=\"form-control\" placeholder=\"username\"  onChange={this.inputHandler}/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"input-group form-group\">\r\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input name=\"password\" type=\"password\" class=\"form-control\" placeholder=\"password\" onChange={this.inputHandler}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"row align-items-center remember\">\r\n\t\t\t\t\t\t<input type=\"checkbox\" />Remember Me\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t<input type=\"submit\" value=\"Login\" onClick={this.authenticateUser} class=\"btn float-right login_btn\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"card-footer\">\r\n\t\t\t\t<div class=\"d-flex justify-content-center links\">\r\n\t\t\t\t\tDon't have an account?<NavLink to=\"/signup\">Sign Up</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"d-flex justify-content-center\">\r\n\t\t\t\t\t<a href=\"#\">Forgot your password?</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n        </div>\r\n                        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n  isAuth : state.auth.isAuth\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  login : login\r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(LoginComponent);","\r\nexport const login = (res) => ({\r\n    type : \"LOGIN\",\r\n    payload : res\r\n})\r\n\r\nexport const logout = () => ({\r\n            type: \"LOGOUT\",\r\n            payload : false\r\n})\r\n\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from \"react-redux\";\r\nimport { addItemToCart, updateQuantity } from \"../../redux/actionTypes/cartActionTypes\";\r\nimport { getProductByID, getProducts } from \"../../redux/actionTypes/productsActionTypes\"\r\n\r\n\r\nclass ProductViewComponent extends React.Component {\r\n    \r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render () {\r\n        const prodId = this.props.match.params.productId;\r\n        const productsList = this.props.productsList;\r\n\r\n        let current;\r\n        productsList.map(i => {\r\n            if (i.productID == prodId) {\r\n                current = i;\r\n            }\r\n            \r\n        })\r\n\r\n        console.log(current)\r\n\r\n        return (\r\n        \r\n            <div>\r\n                <div className=\"card image-width\">\r\n                    <div >\r\n                        <img className=\"card-img-top\" src={current.imgUrl} alt=\"Shoes\"/>\r\n                    </div>\r\n    \r\n                    <div className=\"card-body product-card-body\">\r\n                        <h5 className=\"card-title\">{current.name}</h5>\r\n                        <div className=\"card-text\">Price : {current.price} {current.currency}</div>\r\n                        <div className=\"card-text\" >Brand : {current.brand}</div>\r\n                        <div className=\"card-text\" >Made in : {current.make}</div>\r\n                        <div className=\"card-text\" >Remarks : {current.remarks}</div>\r\n                        {/* <button onClick={()=>this.props.updateQuantity()}>Update</button> */}\r\n                        <div className=\"btn btn-primary\" onClick={()=>this.props.addItemToCart(current)}>Add to Cart</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    ...state\r\n   })\r\n   \r\n//    const mapDispatchToProps = (dispatch) => ({\r\n//     addItemToCart : addItemToCart, \r\n//        getProductByID : dispatch(getProductByID)\r\n//    })\r\n\r\nconst mapDispatchToProps = {\r\n    addItemToCart, \r\n    getProductByID,\r\n    getProducts,\r\n    updateQuantity\r\n   }\r\n   \r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(ProductViewComponent);","\r\nexport const getProductByID = (id) => ({\r\n    type : \"GET_PRODUCT_BY_ID\",\r\n    payload : id\r\n})\r\n\r\nexport const getProducts = () => ({\r\n    type: \"GET_PRODUCTS_LIST\",\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { saveUserProfile } from \"../../redux/actionTypes/userProfileActionTypes\"\r\n\r\nfunction UserProfile(props) {\r\n\r\n    let userInfo = {}\r\nconst onChangeProfileInfo = (event) => {\r\n    userInfo[event.currentTarget.name] = event.target.value;\r\n    console.log(userInfo)\r\n}\r\n\r\n    return (\r\n<div className=\"card\">\r\n\t\t        <div className=\"card-body\">\r\n\t\t            <div className=\"row\">\r\n\t\t                <div className=\"col-md-12\">\r\n\t\t                    <h4>Your Profile</h4>\r\n\t\t                    <hr/>\r\n\t\t                </div>\r\n\t\t            </div>\r\n\t\t            <div className=\"row\">\r\n\t\t                <div className=\"col-md-12\">\r\n\t\t                    <div>\r\n                              <div className=\"form-group row\">\r\n                                <label for=\"name\" className=\"col-4 col-form-label\">First Name</label> \r\n                                <div className=\"col-8\">\r\n                                  <input id=\"name\" name=\"firstname\" \r\n                                  placeholder=\"First Name\" className=\"form-control here\" \r\n                                  type=\"text\" onChange={(event)=>onChangeProfileInfo(event)}/>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <label for=\"lastname\" className=\"col-4 col-form-label\">Last Name*</label> \r\n                                <div className=\"col-8\">\r\n                                  <input id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" \r\n                                  className=\"form-control here\" type=\"text\"\r\n                                  onChange={(event)=>onChangeProfileInfo(event)}/>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <label for=\"text\" className=\"col-4 col-form-label\">Phone Number*</label> \r\n                                <div className=\"col-8\">\r\n                                  <input id=\"text\" name=\"text\" placeholder=\"Phone Number\" \r\n                                  className=\"form-control here\" required=\"required\" type=\"text\"\r\n                                  onChange={(event)=>onChangeProfileInfo(event)}/>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <label for=\"email\" className=\"col-4 col-form-label\">Email*</label> \r\n                                <div className=\"col-8\">\r\n                                  <input id=\"email\" name=\"email\" placeholder=\"Email\" \r\n                                  className=\"form-control here\" required=\"required\" type=\"text\"\r\n                                  onChange={(event)=>onChangeProfileInfo(event)}/>\r\n                                </div>\r\n                              </div> \r\n                              <div className=\"form-group row\">\r\n                                <div className=\"offset-4 col-8\">\r\n                                  <button name=\"submit\" className=\"btn btn-primary\"\r\n                                  onClick={()=>props.saveUserProfile(userInfo)}>Update My Profile</button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\t\t                </div>\r\n\t\t            </div>\r\n\t\t            \r\n\t\t        </div>\r\n\t\t    </div>\r\n    )\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    \r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    saveUserProfile\r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(UserProfile);","export const saveUserProfile = (user) => ({\r\n    type : \"SAVE_USER_PROFILE\",\r\n    user\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport \"./UserProfile.css\"\r\n\r\nfunction UserProfile(props) {\r\n    return (\r\n        <div classNameName=\"card\">\r\n            <div className=\"card-body\">\r\n            <div className=\"row\">\r\n\t\t                <div className=\"col-md-12\">\r\n\t\t                    <h4>Your Orders Are Here</h4>\r\n                            <div>Grand Total & Quantity : {props.grandTotal} & {props.totalQuantity}</div>\r\n\t\t                    <hr/>\r\n\t\t                </div>\r\n\t\t            </div>\r\n            \r\n                <div className=\"col-12\">\r\n                    <table className=\"table table-image\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">Product ID</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Product Name</th>\r\n                        <th scope=\"col\">Quantity</th>\r\n                        <th scope=\"col\">Price/Each</th>\r\n                        <th scope=\"col\">Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            props.selectedItems.map(item => {\r\n                            return (<tr>\r\n                                <td scope=\"row\">{item.productID}</td>\r\n                                <td className=\"w-25\">\r\n                                    <img src={item.imgUrl} className=\"img-fluid cart-image-width img-thumbnail\" alt={item.name}/>\r\n                                </td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.quantity}</td>\r\n                                <td>{item.price}</td>\r\n                                <td>{item.itemTotalPrice}</td>\r\n                            </tr>)\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                    </table>  \r\n                </div>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    selectedItems : state.cartList.selectedItems,\r\n    grandTotal : state.cartList.grandTotal,\r\n    totalQuantity: state.cartList.totalQuantity\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(UserProfile);","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nimport UserProfile from \"../UserProfile/UserProfile\";\r\nimport MyOrders from \"../MyOrders/MyOrders\"\r\n\r\nfunction MyProfile() {\r\n    return (\r\n        <div>\r\n            <div className=\"container cart-container\">\r\n\t<div className=\"row\">\r\n\t\t<div className=\"col-md-3 \">\r\n\t\t     <div className=\"list-group \">\r\n              <a href=\"javascript:void()\" className=\"list-group-item list-group-item-action\"><NavLink to=\"/my-profile/user-profile\">User Profile</NavLink></a>\r\n              <a href=\"javascript:void()\" className=\"list-group-item list-group-item-action\"><NavLink to=\"/my-profile/my-orders\">My Orders</NavLink></a>\r\n            </div> \r\n\t\t</div>\r\n\t\t<div className=\"col-md-9\">\r\n        <Switch>\r\n                <Route path=\"/my-profile/user-profile\" component={UserProfile}></Route>\r\n                 <Route path=\"/my-profile/my-orders\" component={MyOrders}></Route>\r\n        </Switch>\r\n                 \r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyProfile;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport \"./signUp.css\";\r\n\r\nclass SignUpComponent extends React.Component { \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            singUpForm : {\r\n                name : \"\",\r\n                email : \"\",\r\n                username : \"\",\r\n                password : \"\"\r\n        }\r\n        }\r\n    }\r\n\r\n    createAccount = (event) => {\r\n\r\n        event.preventDefault();\r\n        axios.post(BE_BASEURL+\"/api/auth/signup\", this.state.singUpForm)\r\n        .then((res)=> {\r\n            console.log(res);\r\n            if (res.data.success === true) {\r\n                this.props.history.push(\"/login\")\r\n            } else if (res.data.success === false) {\r\n                console.log(res.data.message);\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    inputHandler = (event) => {\r\n        let fieldName =event.currentTarget.name;\r\n        let fieldValue = event.target.value;\r\n        this.setState((state) => {\r\n            state.singUpForm[fieldName] = fieldValue;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n            <div className=\"card bg-light d-flex justify-content-center h-100\">\r\n<article className=\"card-body mx-auto\" >\r\n\t<h4 className=\"card-title mt-3 text-center links\">Create Account</h4>\r\n\t<p className=\"text-center links\">Get started with your free account</p>\r\n\t<p>\r\n\t\t<a href=\"\" className=\"btn btn-block btn-twitter\"> <i className=\"fab fa-twitter\"></i>   Login via Twitter</a>\r\n\t\t<a href=\"\" className=\"btn btn-block btn-facebook\"> <i className=\"fab fa-facebook-f\"></i>   Login via facebook</a>\r\n\t</p>\r\n\t<p className=\"divider-text\">\r\n        <span className=\"bg-light\">OR</span>\r\n    </p>\r\n\t<form>\r\n\t<div className=\"form-group input-group\">\r\n\t\t<div className=\"input-group-prepend\">\r\n\t\t    <span className=\"input-group-text\"> <i className=\"fa fa-user\"></i> </span>\r\n\t\t </div>\r\n        <input name=\"name\" className=\"form-control\" onChange={this.inputHandler} placeholder=\"Full name\" type=\"text\"/>\r\n    </div> \r\n    <div className=\"form-group input-group\">\r\n    \t<div className=\"input-group-prepend\">\r\n\t\t    <span className=\"input-group-text\"> <i className=\"fa fa-envelope\"></i> </span>\r\n\t\t </div>\r\n        <input name=\"email\" className=\"form-control\" onChange={this.inputHandler} placeholder=\"Email address\" type=\"email\"/>\r\n    </div> \r\n    <div className=\"form-group input-group\">\r\n    \t<div className=\"input-group-prepend\">\r\n\t\t    <span className=\"input-group-text\"> <i className=\"fa fa-phone\"></i> </span>\r\n\t\t</div>\r\n    \t<input name=\"username\" className=\"form-control\" onChange={this.inputHandler} placeholder=\"Phone number\" type=\"text\"/>\r\n    </div> \r\n    \r\n    <div className=\"form-group input-group\">\r\n    \t<div className=\"input-group-prepend\">\r\n\t\t    <span className=\"input-group-text\"> <i className=\"fa fa-lock\"></i> </span>\r\n\t\t</div>\r\n        <input name=\"password\" className=\"form-control\" onChange={this.inputHandler} placeholder=\"Create password\" type=\"password\"/>\r\n    </div>                                   \r\n    <div className=\"form-group\">\r\n        <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.createAccount}> Create Account  </button>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n\t\t\t\t<div class=\"d-flex justify-content-center links\">\r\n                Have an account?<NavLink to=\"/login\">Log In</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>  \r\n    {/* <p className=\"text-center links\">Have an account? <NavLink to=\"/login\" className=\"nav-link\">Log In</NavLink> </p>                                                                  */}\r\n</form>\r\n</article>\r\n</div>\r\n</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUpComponent;","import React from 'react'; \r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport HomeComponent from \"../components/Home/HomeComponent\";\r\nimport ProductsComponent from \"../components/Products/Products\";\r\nimport CartComponent from \"../components/Cart/Cart\";\r\nimport LoginComponent from '../components/LoginComponent/LoginComponent';\r\nimport ProductViewComponent from \"../components/ProductViewComponent/ProductViewComponent\";\r\nimport MyProfile from \"../components/MyProfile/MyProfile\";\r\nimport SignUpComponent from \"../components/SignUp/SignUpComponent\";\r\nimport { logout } from \"../redux/actionTypes/authActionTypes\";\r\n\r\nimport './routes.css'\r\n\r\nclass RoutesComponents extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        console.log(process.env.PUBLIC_URL);\r\n        let basename = process.env.PUBLIC_URL;\r\n\r\n        return (\r\n            \r\n            <Router basename={basename}> \r\n                <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n                <ul className=\"navbar-nav\">\r\n                    {\r\n                        !this.props.isAuth ? \r\n                        <div className=\"links\">\r\n                        <li className=\"nav-item active\">\r\n                            <NavLink to=\"/login\" className=\"nav-link\">Login</NavLink> \r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/signup\" className=\"nav-link\">Sign Up</NavLink> \r\n                        </li>\r\n                        </div>\r\n                        :\r\n                        <div className=\"links\">\r\n                        <li className=\"nav-item active\">\r\n                            <NavLink to=\"/home\" className=\"nav-link\">Home *{process.env.PUBLIC_URL}*</NavLink> \r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/products\" className=\"nav-link\">Products</NavLink> \r\n                        </li>\r\n                        <li className=\"nav-item \">\r\n                            <NavLink to=\"/my-profile/user-profile\" className=\"nav-link\">My Profile</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/cart\" className=\"nav-link\">Cart ({this.props.totalQuantity})</NavLink> \r\n                        </li>\r\n                        <input type=\"submit\" value=\"Logout\" onClick={()=>this.props.logout(false)} class=\"btn float-right login_btn\" />\r\n                        </div>\r\n                    }\r\n                \r\n                </ul>\r\n                </nav>\r\n                <div className=\"routesview\">\r\n                    {\r\n                        this.props.isAuth ? \r\n                        <Switch>\r\n                        <Route path=\"/cart\" component={CartComponent}></Route>\r\n                        <Route path=\"/products\" component={ProductsComponent}></Route>\r\n                        <Route path=\"/my-profile\" component={MyProfile}></Route>\r\n                        <Route path=\"/login\" component={LoginComponent}></Route>\r\n                        <Route path=\"/product-view/:productId\" component={ProductViewComponent}></Route>\r\n                        <Route path=\"/home\" component={HomeComponent}></Route>\r\n                    </Switch>\r\n                    :\r\n                    <Switch>\r\n                        <Route path=\"/login\" component={LoginComponent}></Route>\r\n                        <Route path=\"/signup\" component={SignUpComponent}></Route>\r\n                        <Route path=\"/\" component={LoginComponent}></Route>\r\n                    </Switch>\r\n                    }\r\n                    \r\n                </div>\r\n            </Router>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    totalQuantity : state.cartList.totalQuantity,\r\n    isAuth : state.auth.isAuth\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    logout : logout\r\n};\r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(RoutesComponents);","import prods from \"../mocks/Products.json\";\r\n\r\nconst initialState = prods;\r\nexport default (state = initialState, action) => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case  \"GET_PRODUCTS_LIST\" :\r\n            return state;\r\n        case \"GET_PRODUCT_BY_ID\" :\r\n            return state;\r\n        default :\r\n        return state;\r\n    }\r\n\r\n}","const initialState = {\r\n    selectedItems:  [],\r\n    grandTotal : 0,\r\n    totalQuantity : 0\r\n};\r\nexport default (state = initialState, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case  \"ADD_ITEM_TO_CART\" :\r\n            let currentProduct = action.payload;\r\n            let inCartItem = state.selectedItems.find(item => item.productID === currentProduct.productID)\r\n\r\n            if (inCartItem) {\r\n                inCartItem.quantity +=1; \r\n                inCartItem.itemTotalPrice = (inCartItem.quantity)*(inCartItem.price);\r\n                let grandTotal = state.grandTotal + inCartItem.price;\r\n                let totalQuantity = state.totalQuantity + 1\r\n                return {\r\n                    ...state,\r\n                    grandTotal: grandTotal,\r\n                    totalQuantity : totalQuantity\r\n                }\r\n\r\n            } else {\r\n                currentProduct.quantity = 1;\r\n                currentProduct.itemTotalPrice = (currentProduct.quantity)*(currentProduct.price);\r\n                let grandTotal = state.grandTotal + currentProduct.price;\r\n                let totalQuantity = state.totalQuantity + 1\r\n                return {\r\n                    ...state,\r\n                    selectedItems: [...state.selectedItems, currentProduct],\r\n                    grandTotal: grandTotal,\r\n                    totalQuantity : totalQuantity\r\n                } \r\n            }\r\n\r\n        case \"UPDATE_QUANTITY\" :\r\n            let inCartItemCurrent = state.selectedItems.find(item => item.productID === action.productID);\r\n            inCartItemCurrent.quantity = parseInt(action.newQuantity);\r\n            inCartItemCurrent.itemTotalPrice = inCartItemCurrent.quantity*inCartItemCurrent.price;\r\n            let grandTotal = state.selectedItems.reduce((total, each) => {\r\n                return total+parseInt(each.itemTotalPrice)\r\n            },0)\r\n            let totalQuantity = state.selectedItems.reduce((total, each)=>{\r\n                return total + parseInt(each.quantity)\r\n            },0)\r\n        return {\r\n            ...state,\r\n            totalQuantity:totalQuantity,\r\n            grandTotal:grandTotal\r\n        }\r\n        \r\n        default :\r\n        return state;\r\n    }\r\n\r\n}","const initialState = {};\r\nexport default (state = initialState, action) => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case  \"SAVE_USER_PROFILE\" :\r\n            return {\r\n                ...state,\r\n                userInfo : action.user\r\n            };\r\n        default :\r\n        return state;\r\n    }\r\n\r\n}","\r\nconst intialState = {\r\n    name : \"\",\r\n    isAuth : false\r\n}\r\n\r\nexport default (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\" : \r\n            return {\r\n                ...state,\r\n                isAuth : action.payload\r\n            };\r\n        case \"LOGOUT\" :\r\n            return {\r\n                ...state,\r\n                isAuth : action.payload\r\n            };\r\n        case \"SIGNUP\" :\r\n            return state;\r\n        default : return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport productsList from \"./reducers/productsListReducer\";\r\nimport cartList from \"./reducers/cartReducer\";\r\nimport userProfile from \"./reducers/userProfileReducer\";\r\nimport auth from './reducers/authReducer';\r\n\r\nexport default combineReducers({\r\n    productsList, \r\n    cartList, \r\n    userProfile,\r\n    auth\r\n})","import { createStore, applyMiddleware, compose} from \"redux\";\r\nimport  thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";  \r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() || compose;\r\n// const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\nconst store = createStore(rootReducer, composeEnhancers);\r\n\r\nexport default store;","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport RoutesComponents from \"./routes/routes\";\r\nimport store from \"./redux/store\";\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  render () {\r\n    return (\r\n      <Provider store={store}>\r\n      <div className=\"App\">\r\n        <RoutesComponents></RoutesComponents>\r\n      </div>\r\n      </Provider>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}