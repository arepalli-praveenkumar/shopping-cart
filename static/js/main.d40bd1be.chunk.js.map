{"version":3,"sources":["components/Home/HomeComponent.js","redux/actionTypes/cartActionTypes.js","components/Products/Products.js","components/Cart/Cart.js","components/LoginComponent/LoginComponent.js","components/ProductViewComponent/ProductViewComponent.js","redux/actionTypes/productsActionTypes.js","components/UserProfile/UserProfile.js","redux/actionTypes/userProfileActionTypes.js","components/MyOrders/MyOrders.js","components/MyProfile/MyProfile.js","routes/routes.js","redux/reducers/productsListReducer.js","redux/reducers/cartReducer.js","redux/reducers/userProfileReducer.js","redux/rootReducer.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["HomeComponent","to","addItemToCart","item","type","payload","updateQuantity","newQuantity","productID","ProductsComponent","props","productDetailedView","id","console","log","history","push","this","prodList","productsList","className","map","prod","index","key","onClick","src","imgUrl","alt","name","price","React","Component","mapDispatchToProps","connect","state","CartComponent","event","target","value","grandTotal","totalQuantity","scope","selectedItems","quantity","onChange","updateQnty","itemTotalPrice","cartList","LoginComponent","res","googleresponse","Name","profileObj","email","token","googleId","Image","imageUrl","ProviderId","responseGoogle","response","signup","style","clientId","buttonText","onSuccess","onFailure","ProductViewComponent","current","prodId","match","params","productId","i","currency","brand","make","remarks","getProductByID","getProducts","saveUserProfile","user","userInfo","onChangeProfileInfo","currentTarget","for","placeholder","required","classNameName","MyProfile","href","path","component","UserProfile","MyOrders","RoutesComponents","process","basename","exact","initialState","combineReducers","action","currentProduct","inCartItem","find","inCartItemCurrent","parseInt","reduce","total","each","userProfile","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION__","compose","store","createStore","rootReducer","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d40bd1be.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst HomeComponent = () => {\r\n    return (<h1>Please visit <NavLink to=\"/products\">Products</NavLink> page to buy world class items</h1>);\r\n}\r\n\r\nexport default HomeComponent;","\r\nexport const addItemToCart = (item) => ({\r\n    type : \"ADD_ITEM_TO_CART\",\r\n    payload : item\r\n})\r\n\r\nexport const updateQuantity = (newQuantity,productID) => ({\r\n            type: \"UPDATE_QUANTITY\",\r\n            newQuantity,productID\r\n})\r\n\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from \"react-redux\";\r\nimport { addItemToCart } from \"../../redux/actionTypes/cartActionTypes\";\r\n// import xx from \"./Products.json\";\r\n\r\n// import w from \"./images/w.jpg\"\r\nimport \"./Products.css\"\r\n\r\nclass ProductsComponent extends React.Component {\r\n\r\n    // addToCart = () => {\r\n    //     console.log(\"Add to cart\");\r\n    // }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    productDetailedView = (id) => {\r\n        console.log(id)\r\n        this.props.history.push(`/product-view/${id}`)\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(xx)\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props);\r\n        const prodList = this.props.productsList\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row text-center text-lg-left\">\r\n                    {\r\n                        prodList.map((prod, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className=\"card image-width\">\r\n                                        <div onClick={()=>this.productDetailedView(prod.id)}>\r\n                                            <img className=\"card-img-top\" src={prod.imgUrl} alt=\"Shoes\"/>\r\n                                        </div>\r\n                        \r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{prod.name}</h5>\r\n                                            <div className=\"card-text\" >{prod.price}</div>\r\n                                            <div className=\"btn btn-primary\" onClick={()=>this.props.addItemToCart(prod)}>Add to Cart</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                )\r\n                        })\r\n                    }     \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n ...state\r\n})\r\n\r\nconst mapDispatchToProps =  {\r\n    addItemToCart\r\n}\r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(ProductsComponent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateQuantity } from \"../../redux/actionTypes/cartActionTypes\";\r\nimport \"./Cart.css\"\r\nclass CartComponent extends React.Component {\r\n\r\n    updateQnty(event, productID) {\r\n        console.log(event.target.value);\r\n        let newQuantity = event.target.value\r\n        this.props.updateQuantity(newQuantity, productID)\r\n    }\r\n    render () {\r\n        return (\r\n            \r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n            <div>Grand Total & Quantity : {this.props.grandTotal} & {this.props.totalQuantity}</div><br/>\r\n            \r\n                <div className=\"col-12\">\r\n                    <table className=\"table table-image\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">Product ID</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Product Name</th>\r\n                        <th scope=\"col\">Quantity</th>\r\n                        <th scope=\"col\">New Quantity</th>\r\n                        <th scope=\"col\">Price/Each</th>\r\n                        <th scope=\"col\">Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.props.selectedItems.map(item => {\r\n                            return (<tr>\r\n                                <td scope=\"row\">{item.productID}</td>\r\n                                <td className=\"w-25\">\r\n                                    <img src={item.imgUrl} className=\"img-fluid cart-image-width img-thumbnail\" alt={item.name}/>\r\n                                </td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.quantity}</td>\r\n                                <td> \r\n                                    <input type=\"text\" onChange={(event)=>this.updateQnty(event, item.productID)}/>\r\n                                </td>\r\n                                <td>{item.price}</td>\r\n                                <td>{item.itemTotalPrice}</td>\r\n                            </tr>)\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                    </table>  \r\n                    <div>Grand Total : {this.props.grandTotal}</div> \r\n                    <div>Grand Quantity : {this.props.totalQuantity}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n                        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    selectedItems : state.cartList.selectedItems,\r\n    grandTotal : state.cartList.grandTotal,\r\n    totalQuantity: state.cartList.totalQuantity\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    updateQuantity\r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(CartComponent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nclass LoginComponent extends React.Component {\r\n\r\n\r\n    signup(res) {\r\n        \r\n            const googleresponse = {\r\n        \r\n              Name: res.profileObj.name,\r\n        \r\n              email: res.profileObj.email,\r\n        \r\n              token: res.googleId,\r\n        \r\n              Image: res.profileObj.imageUrl,\r\n        \r\n              ProviderId: 'Google'\r\n        \r\n            };\r\n        \r\n            console.log(googleresponse);\r\n            this.props.history.push('/products')\r\n            //debugger;\r\n        \r\n            // axios.post('http://localhost:60200/Api/Login/SocialmediaData', googleresponse)\r\n        \r\n            //   .then((result) => {\r\n        \r\n            //     let responseJson = result;\r\n        \r\n            //     sessionStorage.setItem(\"userData\", JSON.stringify(result));\r\n        \r\n            //     this.props.history.push('/Dashboard')\r\n        \r\n            //   });\r\n        \r\n          };\r\n    \r\n    render () {\r\n\r\n\r\n        const responseGoogle = (response) => {\r\n        \r\n            console.log(response);\r\n      \r\n            var res = response.profileObj;\r\n      \r\n            console.log(res);\r\n      \r\n            //debugger;\r\n      \r\n            this.signup(response);\r\n      \r\n          }\r\n\r\n        return (\r\n            \r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n\r\n          <div className=\"col-sm-12 btn btn-info\">\r\n\r\n            Login With Google Using ReactJS\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n\r\n          <div style={{ 'paddingTop': \"20px\" }} className=\"col-sm-12\">\r\n\r\n            <div className=\"col-sm-4\"></div>\r\n\r\n            <div className=\"col-sm-4\">\r\n\r\n              <GoogleLogin\r\n\r\n                clientId=\"464944719379-fbu6ptpt8fensf7ah9u7ii65r29ut9cc.apps.googleusercontent.com\"\r\n\r\n                buttonText=\"Login with Google\"\r\n\r\n                onSuccess={responseGoogle}\r\n\r\n                onFailure={responseGoogle} ></GoogleLogin>\r\n\r\n            </div>\r\n\r\n            <div className=\"col-sm-4\"></div>\r\n\r\n          </div>\r\n        </div>\r\n        </div>\r\n                        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    \r\n});\r\n\r\nconst mapDispatchToProps = {\r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(LoginComponent);","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from \"react-redux\";\r\nimport { addItemToCart, updateQuantity } from \"../../redux/actionTypes/cartActionTypes\";\r\nimport { getProductByID, getProducts } from \"../../redux/actionTypes/productsActionTypes\"\r\n\r\n\r\nclass ProductViewComponent extends React.Component {\r\n    \r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render () {\r\n        const prodId = this.props.match.params.productId;\r\n        const productsList = this.props.productsList;\r\n\r\n        let current;\r\n        productsList.map(i => {\r\n            if (i.id == prodId) {\r\n                current = i;\r\n            }\r\n            \r\n        })\r\n\r\n        console.log(current)\r\n\r\n        return (\r\n        \r\n            <div>\r\n                <div className=\"card image-width\">\r\n                    <div >\r\n                        <img className=\"card-img-top\" src={current.imgUrl} alt=\"Shoes\"/>\r\n                    </div>\r\n    \r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{current.name}</h5>\r\n                        <div className=\"card-text\">Price : {current.price} {current.currency}</div>\r\n                        <div className=\"card-text\" >Brand : {current.brand}</div>\r\n                        <div className=\"card-text\" >Made in : {current.make}</div>\r\n                        <div className=\"card-text\" >Remarks : {current.remarks}</div>\r\n                        <button onClick={()=>this.props.updateQuantity()}>Update</button>\r\n                        <div className=\"btn btn-primary\" onClick={()=>this.props.addItemToCart(current)}>Add to Cart</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    ...state\r\n   })\r\n   \r\n//    const mapDispatchToProps = (dispatch) => ({\r\n//     addItemToCart : addItemToCart, \r\n//        getProductByID : dispatch(getProductByID)\r\n//    })\r\n\r\nconst mapDispatchToProps = {\r\n    addItemToCart, \r\n    getProductByID,\r\n    getProducts,\r\n    updateQuantity\r\n   }\r\n   \r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(ProductViewComponent);","\r\nexport const getProductByID = (id) => ({\r\n    type : \"GET_PRODUCT_BY_ID\",\r\n    payload : id\r\n})\r\n\r\nexport const getProducts = () => ({\r\n    type: \"GET_PRODUCTS_LIST\",\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { saveUserProfile } from \"../../redux/actionTypes/userProfileActionTypes\"\r\n\r\nfunction UserProfile(props) {\r\n\r\n    let userInfo = {}\r\nconst onChangeProfileInfo = (event) => {\r\n    userInfo[event.currentTarget.name] = event.target.value;\r\n    console.log(userInfo)\r\n}\r\n\r\n    return (\r\n<div className=\"card\">\r\n\t\t        <div className=\"card-body\">\r\n\t\t            <div className=\"row\">\r\n\t\t                <div className=\"col-md-12\">\r\n\t\t                    <h4>Your Profile</h4>\r\n\t\t                    <hr/>\r\n\t\t                </div>\r\n\t\t            </div>\r\n\t\t            <div className=\"row\">\r\n\t\t                <div className=\"col-md-12\">\r\n\t\t                    <div>\r\n                              <div className=\"form-group row\">\r\n                                <label for=\"name\" className=\"col-4 col-form-label\">First Name</label> \r\n                                <div className=\"col-8\">\r\n                                  <input id=\"name\" name=\"firstname\" \r\n                                  placeholder=\"First Name\" className=\"form-control here\" \r\n                                  type=\"text\" onChange={(event)=>onChangeProfileInfo(event)}/>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <label for=\"lastname\" className=\"col-4 col-form-label\">Last Name*</label> \r\n                                <div className=\"col-8\">\r\n                                  <input id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" \r\n                                  className=\"form-control here\" type=\"text\"\r\n                                  onChange={(event)=>onChangeProfileInfo(event)}/>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <label for=\"text\" className=\"col-4 col-form-label\">Phone Number*</label> \r\n                                <div className=\"col-8\">\r\n                                  <input id=\"text\" name=\"text\" placeholder=\"Phone Number\" \r\n                                  className=\"form-control here\" required=\"required\" type=\"text\"\r\n                                  onChange={(event)=>onChangeProfileInfo(event)}/>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"form-group row\">\r\n                                <label for=\"email\" className=\"col-4 col-form-label\">Email*</label> \r\n                                <div className=\"col-8\">\r\n                                  <input id=\"email\" name=\"email\" placeholder=\"Email\" \r\n                                  className=\"form-control here\" required=\"required\" type=\"text\"\r\n                                  onChange={(event)=>onChangeProfileInfo(event)}/>\r\n                                </div>\r\n                              </div> \r\n                              <div className=\"form-group row\">\r\n                                <div className=\"offset-4 col-8\">\r\n                                  <button name=\"submit\" className=\"btn btn-primary\"\r\n                                  onClick={()=>props.saveUserProfile(userInfo)}>Update My Profile</button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\t\t                </div>\r\n\t\t            </div>\r\n\t\t            \r\n\t\t        </div>\r\n\t\t    </div>\r\n    )\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    \r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    saveUserProfile\r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(UserProfile);","export const saveUserProfile = (user) => ({\r\n    type : \"SAVE_USER_PROFILE\",\r\n    user\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport \"./UserProfile.css\"\r\n\r\nfunction UserProfile(props) {\r\n    return (\r\n        <div classNameName=\"card\">\r\n            <div className=\"card-body\">\r\n            <div className=\"row\">\r\n\t\t                <div className=\"col-md-12\">\r\n\t\t                    <h4>Your Orders Are Here</h4>\r\n                            <div>Grand Total & Quantity : {props.grandTotal} & {props.totalQuantity}</div>\r\n\t\t                    <hr/>\r\n\t\t                </div>\r\n\t\t            </div>\r\n            \r\n                <div className=\"col-12\">\r\n                    <table className=\"table table-image\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">Product ID</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Product Name</th>\r\n                        <th scope=\"col\">Quantity</th>\r\n                        <th scope=\"col\">Price/Each</th>\r\n                        <th scope=\"col\">Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            props.selectedItems.map(item => {\r\n                            return (<tr>\r\n                                <td scope=\"row\">{item.productID}</td>\r\n                                <td className=\"w-25\">\r\n                                    <img src={item.imgUrl} className=\"img-fluid cart-image-width img-thumbnail\" alt={item.name}/>\r\n                                </td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.quantity}</td>\r\n                                <td>{item.price}</td>\r\n                                <td>{item.itemTotalPrice}</td>\r\n                            </tr>)\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                    </table>  \r\n                </div>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    selectedItems : state.cartList.selectedItems,\r\n    grandTotal : state.cartList.grandTotal,\r\n    totalQuantity: state.cartList.totalQuantity\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(UserProfile);","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nimport UserProfile from \"../UserProfile/UserProfile\";\r\nimport MyOrders from \"../MyOrders/MyOrders\"\r\n\r\nfunction MyProfile() {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n\t<div className=\"row\">\r\n\t\t<div className=\"col-md-3 \">\r\n\t\t     <div className=\"list-group \">\r\n              <a href=\"javascript:void()\" className=\"list-group-item list-group-item-action\"><NavLink to=\"/my-profile/user-profile\">User Profile</NavLink></a>\r\n              <a href=\"javascript:void()\" className=\"list-group-item list-group-item-action\"><NavLink to=\"/my-profile/my-orders\">My Orders</NavLink></a>\r\n            </div> \r\n\t\t</div>\r\n\t\t<div className=\"col-md-9\">\r\n        <Switch>\r\n                <Route path=\"/my-profile/user-profile\" component={UserProfile}></Route>\r\n                 <Route path=\"/my-profile/my-orders\" component={MyOrders}></Route>\r\n        </Switch>\r\n                 \r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyProfile;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport HomeComponent from \"../components/Home/HomeComponent\";\r\nimport ProductsComponent from \"../components/Products/Products\";\r\nimport CartComponent from \"../components/Cart/Cart\";\r\nimport LoginComponent from '../components/LoginComponent/LoginComponent';\r\nimport ProductViewComponent from \"../components/ProductViewComponent/ProductViewComponent\";\r\nimport MyProfile from \"../components/MyProfile/MyProfile\"\r\n//import './routes.css'\r\n\r\nclass RoutesComponents extends React.Component {\r\n\r\n    render() {\r\n\r\n        console.log(process.env.PUBLIC_URL)\r\n\r\n        return (\r\n            \r\n            <Router basename={process.env.PUBLIC_URL}> \r\n                <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                    <a className=\"nav-link\" href=\"javascript:void()\"><NavLink to=\"/\">Home *{process.env.PUBLIC_URL}*</NavLink></a>\r\n                    </li>\r\n                    <li className=\"nav-item active\">\r\n                    <a className=\"nav-link\" href=\"javascript:void()\"><NavLink to=\"/login\">Login</NavLink></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"javascript:void()\"><NavLink to=\"/products\">Products</NavLink></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"javascript:void()\"><NavLink to=\"/my-profile/user-profile\">My Profile</NavLink></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"javascript:void()\"><NavLink to=\"/cart\">Cart ({this.props.totalQuantity})</NavLink></a>\r\n                    </li>\r\n                </ul>\r\n                </nav>\r\n                <div className=\"routesview\">\r\n                    <Switch>\r\n                        <Route path=\"/cart\" component={CartComponent}></Route>\r\n                        <Route path=\"/products\" component={ProductsComponent}></Route>\r\n                        <Route path=\"/my-profile\" component={MyProfile}></Route>\r\n                        <Route path=\"/login\" component={LoginComponent}></Route>\r\n                        <Route exact path=\"/product-view/:productId\" component={ProductViewComponent}></Route>\r\n                        <Route exact path=\"/\" component={HomeComponent}></Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    totalQuantity : state.cartList.totalQuantity\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\r\n};\r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(RoutesComponents);","import prods from \"../mocks/Products.json\";\r\n\r\nconst initialState = prods;\r\nexport default (state = initialState, action) => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case  \"GET_PRODUCTS_LIST\" :\r\n            return state;\r\n        case \"GET_PRODUCT_BY_ID\" :\r\n            return state;\r\n        default :\r\n        return state;\r\n    }\r\n\r\n}","const initialState = {\r\n    selectedItems:  [],\r\n    grandTotal : 0,\r\n    totalQuantity : 0\r\n};\r\nexport default (state = initialState, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case  \"ADD_ITEM_TO_CART\" :\r\n            let currentProduct = action.payload;\r\n            let inCartItem = state.selectedItems.find(item => item.productID === currentProduct.productID)\r\n\r\n            if (inCartItem) {\r\n                inCartItem.quantity +=1; \r\n                inCartItem.itemTotalPrice = (inCartItem.quantity)*(inCartItem.price);\r\n                let grandTotal = state.grandTotal + inCartItem.price;\r\n                let totalQuantity = state.totalQuantity + 1\r\n                return {\r\n                    ...state,\r\n                    grandTotal: grandTotal,\r\n                    totalQuantity : totalQuantity\r\n                }\r\n\r\n            } else {\r\n                currentProduct.quantity = 1;\r\n                currentProduct.itemTotalPrice = (currentProduct.quantity)*(currentProduct.price);\r\n                let grandTotal = state.grandTotal + currentProduct.price;\r\n                let totalQuantity = state.totalQuantity + 1\r\n                return {\r\n                    ...state,\r\n                    selectedItems: [...state.selectedItems, currentProduct],\r\n                    grandTotal: grandTotal,\r\n                    totalQuantity : totalQuantity\r\n                } \r\n            }\r\n\r\n        case \"UPDATE_QUANTITY\" :\r\n            let inCartItemCurrent = state.selectedItems.find(item => item.productID === action.productID);\r\n            inCartItemCurrent.quantity = parseInt(action.newQuantity);\r\n            inCartItemCurrent.itemTotalPrice = inCartItemCurrent.quantity*inCartItemCurrent.price;\r\n            let grandTotal = state.selectedItems.reduce((total, each) => {\r\n                return total+parseInt(each.itemTotalPrice)\r\n            },0)\r\n            let totalQuantity = state.selectedItems.reduce((total, each)=>{\r\n                return total + parseInt(each.quantity)\r\n            },0)\r\n        return {\r\n            ...state,\r\n            totalQuantity:totalQuantity,\r\n            grandTotal:grandTotal\r\n        }\r\n        \r\n        default :\r\n        return state;\r\n    }\r\n\r\n}","const initialState = {};\r\nexport default (state = initialState, action) => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case  \"SAVE_USER_PROFILE\" :\r\n            return {\r\n                ...state,\r\n                userInfo : action.user\r\n            };\r\n        default :\r\n        return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport productsList from \"./reducers/productsListReducer\";\r\nimport cartList from \"./reducers/cartReducer\";\r\nimport userProfile from \"./reducers/userProfileReducer\";\r\n\r\nexport default combineReducers({\r\n    productsList, \r\n    cartList, \r\n    userProfile\r\n})","import { createStore, applyMiddleware, compose} from \"redux\";\r\nimport  thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";  \r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() || compose;\r\n// const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\nconst store = createStore(rootReducer, composeEnhancers);\r\n\r\nexport default store;","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport RoutesComponents from \"./routes/routes\";\r\nimport store from \"./redux/store\";\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  render () {\r\n    return (\r\n      <Provider store={store}>\r\n      <div className=\"App\">\r\n        <RoutesComponents></RoutesComponents>\r\n      </div>\r\n      </Provider>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}