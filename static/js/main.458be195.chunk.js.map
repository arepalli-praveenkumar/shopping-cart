{"version":3,"sources":["images/shopping-cart.jfif","components/Home/HomeComponent.js","constants.js","redux/actionTypes/productsActionTypes.js","redux/actionTypes/cartActionTypes.js","components/Products/Products.js","redux/actionTypes/loadingActionTypes.js","components/Cart/Cart.js","components/LoginComponent/LoginComponent.js","redux/actionTypes/authActionTypes.js","components/ProductViewComponent/ProductViewComponent.js","redux/actionTypes/userProfileActionTypes.js","components/UserProfile/UserProfile.js","redux/actionTypes/myOrdersActionTypes.js","components/MyOrders/MyOrders.js","components/MyProfile/MyProfile.js","components/SignUp/SignUpComponent.js","routes/routes.js","redux/reducers/productsListReducer.js","redux/reducers/cartReducer.js","redux/reducers/userProfileReducer.js","redux/reducers/authReducer.js","redux/reducers/loadingReducer.js","redux/reducers/ordersReducer.js","redux/rootReducer.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomeComponent","to","BE_BASEURL","token","sessionStorage","getItem","AuthStr","concat","addItemToCart","item","dispatch","type","payload","ProductsComponent","props","productDetailedView","id","console","log","history","push","this","getAllProducts","prodList","productsList","products","class","map","prod","index","key","productID","src","imgUrl","alt","className","name","price","onClick","React","Component","connect","state","axios","get","headers","then","res","dbProducts","data","catch","err","CartComponent","incrementQnty","quantity","increamentQuantity","decrementQnty","decrementQuantity","ordetItems","buyProducts","userID","selectedItems","grandTotal","totalQnty","totalQuantity","orderItems","event","target","value","newQuantity","updateQuantity","scope","currency","itemTotalPrice","cartList","post","LoginComponent","inputHandler","fieldName","currentTarget","fieldValue","setState","loginForm","authenticateUser","preventDefault","accessToken","setItem","JSON","stringify","userPrincipal","login","alert","usernameOrEmail","password","googleresponse","Name","profileObj","email","googleId","Image","imageUrl","ProviderId","responseGoogle","response","signup","style","clientId","buttonText","onSuccess","onFailure","placeholder","onChange","href","mapDispatchToProps","isAuth","auth","ProductViewComponent","prodId","match","params","productId","getProductByID","current","viewList","find","loading","brand","make","remarks","loadingReducer","UserProfile","userInfo","updateProfile","saveUserProfile","phoneNo","username","re","getUserInfo","userInfy","profile","userProfile","profileInfo","user","formatDate","date","Date","myOrders","classNameName","orderedList","orders","purchaseDate","order","MyProfile","path","component","MyOrders","SignUpComponent","createAccount","singUpForm","success","message","RoutesComponents","logoutSession","removeItem","logout","process","authToken","basename","shoppingCartImage","initialState","intialState","error","combineReducers","action","currentProduct","inCartItem","inCartItemCurrent","parseInt","reduce","total","each","incCartItemCurrent","iGrandTotal","decCartItemCurrent","dGrandTotal","store","window","__REDUX_DEVTOOLS_EXTENSION__","compose","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.458be195.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping-cart.b55d9130.jfif\";","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst HomeComponent = () => {\r\n    return (<h1>Please visit <NavLink to=\"/products\">Products</NavLink> page to buy world class items</h1>);\r\n}\r\n\r\nexport default HomeComponent;","export const BE_BASEURL = \"http://192.168.1.5:8080\";","\r\nimport axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport { requestLoading, reqSucc, error } from \"./loadingActionTypes\";\r\n\r\n\r\nlet token = sessionStorage.getItem(\"token\");\r\nconst AuthStr = 'Bearer '.concat(token);\r\n\r\nexport function getProductByID(id){\r\n    return (dispatch) => {\r\n    dispatch(requestLoading());\r\n    axios.get(BE_BASEURL+\"/api/products/getById/\"+id, \r\n    {\r\n      headers : {\r\n        \"Authorization\" :AuthStr,\r\n        \"Content-Type\" : \"application/json\"\r\n      }\r\n    }).then( res => {\r\n      dispatch(storeInViewedList(res.data[0]))\r\n      dispatch(reqSucc());\r\n    }).catch( err => {\r\n          console.log(err);\r\n          dispatch(error());\r\n          return err.data;\r\n    });\r\n    }\r\n}\r\n\r\nexport function storeInViewedList (item) {\r\n    return (dispatch) =>{\r\n        dispatch({\r\n            type : \"INSERT_VIEWED_ITEM\",\r\n            payload : item\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProducts = () => ({\r\n    type: \"GET_PRODUCTS_LIST\",\r\n})\r\n\r\nexport function storeProductsToRedux(dbProducts) {\r\n    return (dispatch) => {\r\n        dispatch(\r\n            {\r\n                type : \"STORE_PRODUCTS\",\r\n                payload :dbProducts\r\n            }\r\n        )\r\n    }\r\n\r\n}","import axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport { requestLoading, reqSucc, error } from \"./loadingActionTypes\";\r\nimport { storeProductsToRedux } from './productsActionTypes'\r\n\r\n\r\nlet token = sessionStorage.getItem(\"token\");\r\nconst AuthStr = 'Bearer '.concat(token);\r\n\r\nexport function addItemToCart(item) {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type : \"ADD_ITEM_TO_CART\",\r\n            payload : item\r\n        })\r\n    }\r\n}\r\n\r\nexport function getAllProducts() {\r\n    return (dispatch) => {\r\n\r\n    dispatch(requestLoading());\r\n    axios.get(BE_BASEURL+\"/api/products/getAllProducts\", \r\n    {\r\n      headers : {\r\n        \"Authorization\" :AuthStr,\r\n        \"Content-Type\" : \"application/json\"\r\n      }\r\n    }).then( res => {\r\n      dispatch(reqSucc());\r\n      dispatch(storeProductsToRedux(res.data));\r\n    }).catch( err => {\r\n          console.log(err);\r\n          dispatch(error());\r\n          return err.data;\r\n    });\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function updateQuantity(newQuantity,productID) {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: \"UPDATE_QUANTITY\",\r\n            newQuantity,productID\r\n        })\r\n    }       \r\n}\r\n\r\nexport function decrementQuantity(productID) {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: \"DECR_QUANTITY\",\r\n            productID\r\n        })\r\n    }\r\n    \r\n}\r\n\r\nexport function increamentQuantity(productID) {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: \"INCR_QUANTITY\",\r\n            productID\r\n        })\r\n    }\r\n}\r\n\r\nexport function clearCart() {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: \"CLEAR_CART\"\r\n        });\r\n        \r\n    }\r\n}\r\n\r\nexport function orderItems(data) {\r\n    return (dispatch) => {\r\n\r\n    dispatch(requestLoading());\r\n    axios.post(BE_BASEURL+\"/api/products/orderItems\", data, \r\n    {\r\n      headers : {\r\n        \"Authorization\" :AuthStr,\r\n        \"Content-Type\" : \"application/json\"\r\n      }\r\n    }).then( res => {\r\n      dispatch(reqSucc());\r\n      dispatch(clearCart());\r\n    }).catch( err => {\r\n          console.log(err);\r\n          dispatch(error());\r\n          return err.data;\r\n    });\r\n\r\n\r\n    }\r\n}\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from \"react-redux\";\r\nimport { addItemToCart, getAllProducts } from \"../../redux/actionTypes/cartActionTypes\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import xx from \"./Products.json\";\r\n\r\n// import w from \"./images/w.jpg\"\r\nimport \"./Products.css\"\r\n\r\nclass ProductsComponent extends React.Component {\r\n\r\n    // addToCart = () => {\r\n    //     console.log(\"Add to cart\");\r\n    // }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    //onClick={()=>this.productDetailedView(prod.id)}\r\n    productDetailedView = (id) => {\r\n        console.log(id)\r\n        this.props.history.push(`/product-view/${id}`)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllProducts();\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props);\r\n        const prodList = this.props.productsList.products\r\n        return (\r\n            <div class=\"container page-top\">\r\n            <div class=\"row\">\r\n                {\r\n                    prodList.map((prod, index) => {\r\n                        return (\r\n                        <div class=\"col-lg-3 col-md-4 col-xs-6 thumb\" key={index}>\r\n                            <NavLink to={`/product-view/${prod.productID}`}>\r\n                                <img  src={prod.imgUrl} class=\"zoom img-fluid \"  alt=\"\"/>\r\n                            </NavLink>\r\n                            <div className=\"card-body product-card-body\">\r\n                                <h5 className=\"card-title\">{prod.name}</h5>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col\">\r\n                                        <p class=\"btn btn-danger btn-block\">Rs {prod.price}</p>\r\n                                    </div>\r\n                                    <div class=\"col\">\r\n                                    <div className=\"btn btn-primary\" onClick={()=>this.props.addItemToCart(prod)}>Add to Cart</div>\r\n                                    </div>\r\n                                </div>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                //     <div class=\"col-12 col-md-6 col-lg-4\">\r\n                //     <div class=\"card\">\r\n                //     <NavLink to={`/product-view/${prod.productID}`}>\r\n                //         <img class=\"card-img-top\" src={prod.imgUrl} alt={prod.name}/></NavLink>\r\n                //         <div class=\"card-body\">\r\n                //             <h4 class=\"card-title\"><a href=\"product.html\" title=\"View Product\">{prod.name}</a></h4>\r\n                //             <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                //             <div class=\"row\">\r\n                //                 <div class=\"col\">\r\n                //                     <p class=\"btn btn-danger btn-block\">{prod.price} Rs</p>\r\n                //                 </div>\r\n                //                 <div class=\"col\">\r\n                //                     <div className=\"btn btn-primary\" onClick={()=>this.props.addItemToCart(prod)}>Add to Cart</div>\r\n                //                     {/* <a href=\"#\" class=\"btn btn-success btn-block\" onClick={()=>this.props.addItemToCart(prod)}>Add to cart</a> */}\r\n                //                 </div>\r\n                //             </div>\r\n                //         </div>\r\n                //     </div>\r\n                // </div>\r\n                \r\n                \r\n                        )\r\n                    })\r\n                }   \r\n           </div>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n ...state\r\n})\r\n\r\nconst mapDispatchToProps =  (dispatch) => {\r\n    return {\r\n        addItemToCart : (prod) => dispatch(addItemToCart(prod)),\r\n        getAllProducts : () => dispatch(getAllProducts())\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(ProductsComponent);","export const requestLoading = () => ({\r\n    type : \"REQUEST_LOADING\",\r\n})\r\n\r\nexport const reqSucc = () => ({\r\n    type : \"REQUEST_SUCC\"\r\n})\r\n\r\nexport const error = () => ({\r\n    type : \"ERROR\"\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    updateQuantity, \r\n    decrementQuantity, \r\n    increamentQuantity, \r\n    orderItems } from \"../../redux/actionTypes/cartActionTypes\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Cart.css\"\r\nclass CartComponent extends React.Component {\r\n\r\n    updateQnty(event, productID) {\r\n        console.log(event.target.value);\r\n        let newQuantity = event.target.value\r\n        this.props.updateQuantity(newQuantity, productID)\r\n    }\r\n\r\n    incrementQnty = (item) => {\r\n        if (item.quantity >= 0) {\r\n            this.props.increamentQuantity(item.productID);\r\n        } else {\r\n            return null;\r\n        }\r\n        \r\n    }\r\n\r\n    decrementQnty = (item) => {\r\n        if (item.quantity === 0) {\r\n            return null;\r\n        } else {\r\n            this.props.decrementQuantity(item.productID);\r\n        }\r\n        //this.props.decrementQuantity(item.productID);\r\n    }\r\n\r\n    ordetItems = () => {\r\n        let buyProducts = {\r\n            userID : 23,\r\n            products : this.props.selectedItems,\r\n            grandTotal : this.props.grandTotal,\r\n            totalQnty: this.props.totalQuantity\r\n\r\n        };\r\n        this.props.orderItems(buyProducts);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            \r\n        <div className=\"container cart-container\">\r\n            <div className=\"\">\r\n            <div>Grand Total & Quantity : {this.props.grandTotal} & {this.props.totalQuantity}</div><br/>\r\n            \r\n                <div className=\"col-12\">\r\n                    <table className=\"table table-image\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">Product ID</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Product Name</th>\r\n                        <th scope=\"col\">Quantity</th>\r\n                        {/* <th scope=\"col\">New Quantity</th> */}\r\n                        <th scope=\"col\">Price/Each</th>\r\n                        <th scope=\"col\">Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.props.selectedItems.map(item => {\r\n                            return (<tr>\r\n                                <td scope=\"row\">{item.productID}</td>\r\n                                <td className=\"w-25\">\r\n                                    <NavLink to={`/product-view/${item.productID}`}>\r\n                                     <img src={item.imgUrl} className=\"img-fluid cart-image-width img-thumbnail\"\r\n                                      alt={item.name}/>\r\n                                    </NavLink>\r\n                                </td>\r\n                                <td>{item.name}</td>\r\n                                <td>\r\n                                    <button onClick={()=>this.incrementQnty(item)}>+</button>{item.quantity}\r\n                                    <button onClick={()=>this.decrementQnty(item)}>-</button>\r\n                                </td>\r\n                                {/* <td> \r\n                                    <input type=\"text\" onChange={(event)=>this.updateQnty(event, item.productID)}/>\r\n                                </td> */}\r\n                                <td>{item.price} - {item.currency}</td>\r\n                                <td>{item.itemTotalPrice}</td>\r\n                            </tr>)\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                    </table>  \r\n                    <div>Grand Total : {this.props.grandTotal}</div> \r\n                    <div>Grand Quantity : {this.props.totalQuantity}</div>\r\n                    <input type=\"submit\" value=\"Checkout\" class=\"btn float-right login_btn\" \r\n                    onClick={this.ordetItems}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n                        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    selectedItems : state.cartList.selectedItems,\r\n    grandTotal : state.cartList.grandTotal,\r\n    totalQuantity: state.cartList.totalQuantity\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateQuantity : () => dispatch(updateQuantity()),\r\n        decrementQuantity : (id) => dispatch(decrementQuantity(id)),\r\n        increamentQuantity : (id) => dispatch(increamentQuantity(id)),\r\n        orderItems : (data) => dispatch(orderItems(data))\r\n    }\r\n    \r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(CartComponent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport GoogleLogin from 'react-google-login';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport { login } from \"../../redux/actionTypes/authActionTypes\";\r\n\r\nimport './login.css';\r\n\r\n//axios.defaults.baseURL = 'https://api.example.com';\r\n//axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\n//axios.defaults.headers.common['Access-Control-Allow-Method'] = 'DELETE, POST, GET, OPTIONS';\r\n//axios.defaults.headers.common['Access-Control-Allow-Headers'] = '\"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"';\r\n\r\n//axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\nclass LoginComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        loginForm : {\r\n          usernameOrEmail : \"\",\r\n          password : \"\"\r\n    }\r\n    }\r\n}\r\n\r\n    signup(res) {\r\n        \r\n            const googleresponse = {\r\n        \r\n              Name: res.profileObj.name,\r\n        \r\n              email: res.profileObj.email,\r\n        \r\n              token: res.googleId,\r\n        \r\n              Image: res.profileObj.imageUrl,\r\n        \r\n              ProviderId: 'Google'\r\n        \r\n            };\r\n        \r\n            console.log(googleresponse);\r\n            this.props.history.push('/products')\r\n            \r\n        \r\n            // axios.post('http://localhost:60200/Api/Login/SocialmediaData', googleresponse)\r\n        \r\n            //   .then((result) => {\r\n        \r\n            //     let responseJson = result;\r\n        \r\n            //     sessionStorage.setItem(\"userData\", JSON.stringify(result));\r\n        \r\n            //     this.props.history.push('/Dashboard')\r\n        \r\n            //   });\r\n        \r\n          };\r\n\r\n    inputHandler = (event) => {\r\n      let fieldName =event.currentTarget.name;\r\n      let fieldValue = event.target.value;\r\n\r\n      this.setState((state) => {\r\n        state.loginForm[fieldName] = fieldValue;\r\n    })\r\n\r\n    }\r\n\r\n    authenticateUser = (event) => {\r\n      event.preventDefault();\r\n        axios.post(BE_BASEURL+\"/api/auth/signin\", this.state.loginForm,\r\n        {\r\n          //headers : {authorization :\"Basic \"+ window.btoa(INSTRUCTOR + \":\" + PASSWORD)}\r\n        })\r\n        .then((res)=> {\r\n            console.log(res);\r\n            if (res.data.accessToken) {\r\n                // TODO more on session creation\r\n                sessionStorage.setItem(\"token\",res.data.accessToken);\r\n                sessionStorage.setItem(\"user\",JSON.stringify(res.data.userPrincipal));\r\n                this.props.login(res.data.accessToken);\r\n                this.props.history.push('/products')\r\n            } else {\r\n                alert(\"Login failed\");\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    \r\n    render () {\r\n\r\n\r\n        const responseGoogle = (response) => {\r\n        \r\n            console.log(response);\r\n      \r\n            var res = response.profileObj;\r\n      \r\n            console.log(res);\r\n      \r\n            //debugger;\r\n      \r\n            this.signup(response);\r\n      \r\n          }\r\n\r\n        return (\r\n            \r\n        <div className=\"container\">\r\n\r\n        <div className=\"row\">\r\n\r\n          <div style={{ 'paddingTop': \"20px\" }} className=\"col-sm-12\">\r\n\r\n            <div className=\"col-sm-4\"></div>\r\n\r\n            <div className=\"col-sm-4\">\r\n\r\n              <GoogleLogin\r\n\r\n                clientId=\"464944719379-h84i67v34o9ivp8h49np2htm96bjsj08.apps.googleusercontent.com\"\r\n\r\n                buttonText=\"Login with Google\"\r\n\r\n                onSuccess={responseGoogle}\r\n\r\n                onFailure={responseGoogle} ></GoogleLogin>\r\n\r\n            </div>\r\n\r\n            <div className=\"col-sm-4\"></div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"container\">\r\n\t<div class=\"d-flex justify-content-center h-100\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<div class=\"card-header\">\r\n\t\t\t\t<h3>Sign In</h3>\r\n\t\t\t\t<div class=\"d-flex justify-content-end social_icon\">\r\n\t\t\t\t\t<span><i class=\"fab fa-facebook-square\"></i></span>\r\n\t\t\t\t\t<span><i class=\"fab fa-google-plus-square\"></i></span>\r\n\t\t\t\t\t<span><i class=\"fab fa-twitter-square\"></i></span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"card-body\">\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<div class=\"input-group form-group\">\r\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"usernameOrEmail\" class=\"form-control\" placeholder=\"Enter usernameOrEmail\"  onChange={this.inputHandler}/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"input-group form-group\">\r\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input name=\"password\" type=\"password\" class=\"form-control\" placeholder=\"password\" onChange={this.inputHandler}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"row align-items-center remember\">\r\n\t\t\t\t\t\t<input type=\"checkbox\" />Remember Me\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t<input type=\"submit\" value=\"Login\" onClick={this.authenticateUser} class=\"btn float-right login_btn\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"card-footer\">\r\n\t\t\t\t<div class=\"d-flex justify-content-center links\">\r\n\t\t\t\t\tDon't have an account?<NavLink to=\"/signup\">Sign Up</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"d-flex justify-content-center\">\r\n\t\t\t\t\t<a href=\"#\">Forgot your password?</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n        </div>\r\n                        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n  isAuth : state.auth.isAuth\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  login : login\r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(LoginComponent);","\r\nexport const login = (res) => ({\r\n    type : \"LOGIN\",\r\n    payload : res\r\n})\r\n\r\nexport const logout = () => ({\r\n            type: \"LOGOUT\",\r\n            payload : false\r\n})\r\n\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from \"react-redux\";\r\nimport { addItemToCart, updateQuantity } from \"../../redux/actionTypes/cartActionTypes\";\r\nimport { getProductByID, getProducts } from \"../../redux/actionTypes/productsActionTypes\"\r\n\r\n\r\nclass ProductViewComponent extends React.Component {\r\n    \r\n\r\n    componentDidMount() {\r\n        const prodId =  this.props.match.params.productId;\r\n        this.props.getProductByID(prodId);\r\n    }\r\n\r\n    render () {\r\n        const prodId = this.props.match.params.productId;\r\n        const current = this.props.viewList.find(item => item.productID === prodId);\r\n        console.log(current);\r\n        //TODO FIX\r\n\r\n        return (\r\n        \r\n            <div>\r\n                <div className=\"card image-width\">\r\n                    {\r\n                        !this.props.loading ?\r\n                        <div>\r\n                        <div >\r\n                        <img className=\"card-img-top\" src={current.imgUrl} alt=\"Shoes\"/>\r\n                    </div>\r\n    \r\n                    <div className=\"card-body product-card-body\">\r\n                        <h5 className=\"card-title\">{current.name}</h5>\r\n                        <div className=\"card-text\">Price : {current.price} {current.currency}</div>\r\n                        <div className=\"card-text\" >Brand : {current.brand}</div>\r\n                        <div className=\"card-text\" >Made in : {current.make}</div>\r\n                        <div className=\"card-text\" >Remarks : {current.remarks}</div>\r\n                       <div className=\"btn btn-primary\" onClick={()=>this.props.addItemToCart(current)}>Add to Cart</div>\r\n                    </div></div> : \"...Loading\"\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    ...state,\r\n    viewList : state.productsList.viewList,\r\n    loading : state.loadingReducer\r\n})\r\n   \r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        addItemToCart, \r\n        getProductByID : (id)=>dispatch(getProductByID(id)),\r\n    }\r\n    \r\n   }\r\n   \r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(ProductViewComponent);","import axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport { requestLoading, reqSucc, error } from \"./loadingActionTypes\";\r\n\r\n// export const saveUserProfile = (user) => ({\r\n//     type : \"SAVE_USER_PROFILE\",\r\n//     user\r\n// })\r\n\r\nlet token = sessionStorage.getItem(\"token\");\r\nconst AuthStr = 'Bearer '.concat(token);\r\n\r\nexport function saveUserProfile(profileInfo) {\r\n  return (dispatch) => {\r\n    dispatch(requestLoading());\r\n    axios.post(BE_BASEURL+\"/api/users/saveUser\", profileInfo, \r\n    {\r\n      headers : {\r\n        \"Authorization\" :AuthStr,\r\n        \"Content-Type\" : \"application/json\"\r\n      }\r\n    }).then( res => {\r\n      dispatch({\r\n        type : \"SAVE_USER_PROFILE\",\r\n        payload : res.data\r\n      });\r\n      dispatch(reqSucc());\r\n    }).catch( err => {\r\n          console.log(err);\r\n          dispatch(error());\r\n          return err.data;\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport function getUserInfo() {\r\n\r\n    return (dispatch) => {\r\n\r\n      dispatch(requestLoading());\r\n        \r\n        axios.get(BE_BASEURL+\"/api/users/praveen_a\",\r\n        {\r\n          headers : {\r\n            \"Authorization\" :AuthStr,\r\n            \"Content-Type\" : \"application/json\"\r\n          }\r\n        }).then( (res) => {\r\n          //this.props.saveUserProfile(res.data);\r\n          dispatch({\r\n            type : \"SAVE_USER_PROFILE\",\r\n            payload : res.data\r\n          })\r\n          console.log(res);\r\n          dispatch(reqSucc());\r\n          return res.data;\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          dispatch(error());\r\n          return err.data;\r\n        })\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport { saveUserProfile, getUserInfo } from \"../../redux/actionTypes/userProfileActionTypes\";\r\nimport \"./UserProfile.css\"\r\n\r\nclass UserProfile extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userInfo : {\r\n      phoneNo : \"\",\r\n      name : \"\",\r\n      email : \"\",\r\n      username : \"\"\r\n      },\r\n      token : \"\"\r\n    }\r\n  }\r\n\r\n  inputHandler = (event) => {\r\n    let fieldName =event.currentTarget.name;\r\n    let fieldValue = event.target.value;\r\n    console.log(fieldName, fieldValue);\r\n    this.setState((state) => {\r\n        state.userInfo[fieldName] = fieldValue;\r\n    })\r\n  }\r\n\r\n  updateProfile = (event) => {\r\n    let newProfile = {\r\n      name : \"Arepalli Praveenkumar\",\r\n      phoneNo : 784512369,\r\n      userID : 23\r\n    };\r\n    event.preventDefault();\r\n    this.props.saveUserProfile(newProfile);\r\n    console.log(this.state.userInfo, this.state.token);\r\n  }\r\n\r\nshouldComponentUpdate() {\r\n  console.log(this.state)\r\n  return true;\r\n}\r\n\r\ncomponentDidMount() {\r\n  const re = this.props.getUserInfo();\r\n  console.log(re)\r\n}\r\n\r\n\r\nrender() {\r\n\r\n  const { name, email, username, phoneNo }= this.props.userInfy;\r\n  \r\n   const profile = (!this.props.loading) ? \r\n   <div className=\"row\">\r\n                    <div className=\"form-group input-group\">\r\n                      <div className=\"input-group-prepend\">\r\n                          <span className=\"input-group-text\"> <i className=\"fa fa-user\"></i> </span>\r\n                      </div>\r\n                          <input name=\"name\" value={name} \r\n                          className=\"form-control\" onChange={this.inputHandler} \r\n                          placeholder=\"full name\" type=\"text\"/>\r\n                      </div> \r\n                      {/* <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                          <span className=\"input-group-text\"> <i className=\"fa fa-envelope\"></i> </span>\r\n                      </div>\r\n                          <input name=\"email\" value={email} className=\"form-control\" onChange={this.inputHandler} placeholder=\"email\" type=\"email\"/>\r\n                      </div> \r\n                      <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                          <span className=\"input-group-text\"> <i className=\"fa fa-phone\"></i> </span>\r\n                      </div>\r\n                        <input name=\"username\" value={username} className=\"form-control\" onChange={this.inputHandler} placeholder=\"username\" type=\"text\"/>\r\n                      </div>  */}\r\n                      \r\n                      <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                          <span className=\"input-group-text\"> <i className=\"fa fa-lock\"></i> </span>\r\n                      </div>\r\n                          <input name=\"phoneNo\" value={phoneNo} className=\"form-control\" onChange={this.inputHandler} placeholder=\"phone no\" type=\"input\"/>\r\n                      </div>                                   \r\n                      <div className=\"form-group\">\r\n                          <button className=\"btn btn-primary btn-block\" onClick={this.updateProfile}> Update Profile </button>\r\n                      </div>\r\n                    </div>\r\n   :  <div>...Loading</div>\r\n\r\n  return (\r\n    <div className=\"card user-profile\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h4>Your Profile</h4>\r\n                            <hr/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {profile}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n}\r\n    \r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n   loading : state.loadingReducer.loading,\r\n   userInfy : state.userProfile.userInfo\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  console.log(dispatch);\r\n  return {\r\n    saveUserProfile : (data) => dispatch(saveUserProfile(data)),\r\n    getUserInfo : () => dispatch(getUserInfo())\r\n  }\r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(UserProfile);","import axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport { requestLoading, reqSucc, error } from \"./loadingActionTypes\";\r\n\r\n\r\nlet token = sessionStorage.getItem(\"token\");\r\nlet user = sessionStorage.getItem(\"user\");\r\nconst AuthStr = 'Bearer '.concat(token);\r\nconsole.log(user)\r\n\r\nexport function myOrders() {\r\n    return (dispatch) => {\r\n\r\n    dispatch(requestLoading());\r\n    axios.get(BE_BASEURL+\"/api/products/myOrders/23\", \r\n    {\r\n      headers : {\r\n        \"Authorization\" :AuthStr,\r\n        \"Content-Type\" : \"application/json\"\r\n      }\r\n    }).then( res => {\r\n      dispatch(saveOrders(res.data));\r\n      dispatch(reqSucc());\r\n      console.log(res);\r\n    }).catch( err => {\r\n          console.log(err);\r\n          dispatch(error());\r\n          return err.data;\r\n    });\r\n\r\n    }\r\n} \r\n\r\n\r\nexport function saveOrders(orders) {\r\n    return (dispatch)=> {\r\n        dispatch({\r\n            type : \"SAVE_ORDERS\",\r\n            payload : orders\r\n        })\r\n    }\r\n}\r\n\r\n// export function myOrders() {\r\n//     return (dispatch) => {\r\n//         dispatch({\r\n//             type : \"MY_ORDERS\"\r\n//         })\r\n//     }\r\n// }","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { myOrders } from \"../../redux/actionTypes/myOrdersActionTypes\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./myOrders.css\"\r\n\r\nclass UserProfile extends React.Component  {\r\n\r\n    componentDidMount() {\r\n        this.props.myOrders();\r\n    }\r\n\r\n    formatDate = (date) =>{\r\n        return new Date(date);\r\n    }\r\n    render() {\r\n    return (\r\n        <div classNameName=\"card\">\r\n            <div className=\"card-body\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <h4>Your Orders Are Here</h4>\r\n                    <div>Grand Total & Quantity : {this.props.grandTotal} & {this.props.totalQuantity}</div>\r\n                    <hr/>\r\n                </div>\r\n\t\t    </div>\r\n\r\n            \r\n            \r\n                <div className=\"col-12\">\r\n                    {\r\n                        this.props.orderedList.map(orders => {\r\n                            return(\r\n                            <div>\r\n                            <div className=\"row\">Purchase Date : {orders.purchaseDate}</div>\r\n                            <div className=\"row\">\r\n                            <table className=\"table table-image\">\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th>#</th>\r\n                                    <th>Image</th> \r\n                                    <th>Product Name</th>\r\n                                    <th>Quantity</th>\r\n                                    <th>Price/Each</th>\r\n                                    <th>Total</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {\r\n                                    orders.products.map(order => {\r\n                                        return(\r\n                                            <tr>\r\n                                                <td scope=\"row\">{order.productID}</td>\r\n                                                <td className=\"w-25\">\r\n                                                    <NavLink to={`/product-view/${order.productID}`}>\r\n                                                        <img src={order.imgUrl} className=\"img-fluid cart-image-width img-thumbnail\"\r\n                                                        alt={order.name}/>\r\n                                                    </NavLink>\r\n                                                </td>\r\n                                                <td>{order.name}</td>\r\n                                                <td>{order.quantity}</td>\r\n                                                <td>{order.price}</td>\r\n                                                <td>{order.itemTotalPrice}</td>\r\n                                            </tr> \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </table>\r\n                            </div>\r\n                            </div>)\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n            </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    orderedList : state.orders.orderedList\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        myOrders : () => dispatch(myOrders())\r\n    }\r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(UserProfile);","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nimport UserProfile from \"../UserProfile/UserProfile\";\r\nimport MyOrders from \"../MyOrders/MyOrders\"\r\n\r\nfunction MyProfile() {\r\n    return (\r\n        <div>\r\n            <div className=\"container cart-container\">\r\n\t<div className=\"row\">\r\n\t\t<div className=\"col-md-3 \">\r\n\t\t     <div className=\"list-group \">\r\n              <a href=\"javascript:void()\" className=\"list-group-item list-group-item-action\"><NavLink to=\"/my-profile/user-profile\">User Profile</NavLink></a>\r\n              <a href=\"javascript:void()\" className=\"list-group-item list-group-item-action\"><NavLink to=\"/my-profile/my-orders\">My Orders</NavLink></a>\r\n            </div> \r\n\t\t</div>\r\n\t\t<div className=\"col-md-9\">\r\n        <Switch>\r\n                <Route path=\"/my-profile/user-profile\" component={UserProfile}></Route>\r\n                 <Route path=\"/my-profile/my-orders\" component={MyOrders}></Route>\r\n        </Switch>\r\n                 \r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyProfile;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport \"./signUp.css\";\r\n\r\nclass SignUpComponent extends React.Component { \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            singUpForm : {\r\n                name : \"\",\r\n                email : \"\",\r\n                username : \"\",\r\n                password : \"\"\r\n        }\r\n        }\r\n    }\r\n\r\n    createAccount = (event) => {\r\n\r\n        event.preventDefault();\r\n        axios.post(BE_BASEURL+\"/api/auth/signup\", this.state.singUpForm)\r\n        .then((res)=> {\r\n            console.log(res);\r\n            if (res.data.success === true) {\r\n                this.props.history.push(\"/login\")\r\n            } else if (res.data.success === false) {\r\n                console.log(res.data.message);\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    inputHandler = (event) => {\r\n        let fieldName =event.currentTarget.name;\r\n        let fieldValue = event.target.value;\r\n        this.setState((state) => {\r\n            state.singUpForm[fieldName] = fieldValue;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n            <div className=\"card bg-light d-flex justify-content-center h-100\">\r\n<article className=\"card-body mx-auto\" >\r\n\t<h4 className=\"card-title mt-3 text-center links\">Create Account</h4>\r\n\t<p className=\"text-center links\">Get started with your free account</p>\r\n\t<p>\r\n\t\t<a href=\"\" className=\"btn btn-block btn-twitter\"> <i className=\"fab fa-twitter\"></i>   Login via Twitter</a>\r\n\t\t<a href=\"\" className=\"btn btn-block btn-facebook\"> <i className=\"fab fa-facebook-f\"></i>   Login via facebook</a>\r\n\t</p>\r\n\t<p className=\"divider-text\">\r\n        <span className=\"bg-light\">OR</span>\r\n    </p>\r\n\t<form>\r\n\t<div className=\"form-group input-group\">\r\n\t\t<div className=\"input-group-prepend\">\r\n\t\t    <span className=\"input-group-text\"> <i className=\"fa fa-user\"></i> </span>\r\n\t\t </div>\r\n        <input name=\"name\" className=\"form-control\" onChange={this.inputHandler} placeholder=\"Full name\" type=\"text\"/>\r\n    </div> \r\n    <div className=\"form-group input-group\">\r\n    \t<div className=\"input-group-prepend\">\r\n\t\t    <span className=\"input-group-text\"> <i className=\"fa fa-envelope\"></i> </span>\r\n\t\t </div>\r\n        <input name=\"email\" className=\"form-control\" onChange={this.inputHandler} placeholder=\"Email address\" type=\"email\"/>\r\n    </div> \r\n    <div className=\"form-group input-group\">\r\n    \t<div className=\"input-group-prepend\">\r\n\t\t    <span className=\"input-group-text\"> <i className=\"fa fa-phone\"></i> </span>\r\n\t\t</div>\r\n    \t<input name=\"username\" className=\"form-control\" onChange={this.inputHandler} placeholder=\"Enter username\" type=\"text\"/>\r\n    </div> \r\n    \r\n    <div className=\"form-group input-group\">\r\n    \t<div className=\"input-group-prepend\">\r\n\t\t    <span className=\"input-group-text\"> <i className=\"fa fa-lock\"></i> </span>\r\n\t\t</div>\r\n        <input name=\"password\" className=\"form-control\" onChange={this.inputHandler} placeholder=\"Create password\" type=\"password\"/>\r\n    </div>                                   \r\n    <div className=\"form-group\">\r\n        <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.createAccount}> Create Account  </button>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n\t\t\t\t<div class=\"d-flex justify-content-center links\">\r\n                Have an account?<NavLink to=\"/login\">Log In</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>  \r\n    {/* <p className=\"text-center links\">Have an account? <NavLink to=\"/login\" className=\"nav-link\">Log In</NavLink> </p>                                                                  */}\r\n</form>\r\n</article>\r\n</div>\r\n</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUpComponent;","import React from 'react'; \r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport HomeComponent from \"../components/Home/HomeComponent\";\r\nimport ProductsComponent from \"../components/Products/Products\";\r\nimport CartComponent from \"../components/Cart/Cart\";\r\nimport LoginComponent from '../components/LoginComponent/LoginComponent';\r\nimport ProductViewComponent from \"../components/ProductViewComponent/ProductViewComponent\";\r\nimport MyProfile from \"../components/MyProfile/MyProfile\";\r\nimport SignUpComponent from \"../components/SignUp/SignUpComponent\";\r\nimport { logout } from \"../redux/actionTypes/authActionTypes\";\r\n\r\nimport shoppingCartImage from '../images/shopping-cart.jfif';\r\nimport './routes.css'\r\n\r\nclass RoutesComponents extends React.Component {\r\n\r\n    logoutSession = () => {\r\n        sessionStorage.removeItem(\"token\");\r\n        this.props.logout(null);\r\n        //this.props.history.push(\"/signup\");\r\n        //this.props.history.push('/signup')\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        console.log(process.env.PUBLIC_URL);\r\n        \r\n        const authToken = sessionStorage.getItem(\"token\");\r\n        console.log(authToken);\r\n        let basename = process.env.PUBLIC_URL;\r\n\r\n        return (\r\n            \r\n            <Router basename={basename}> \r\n                <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n                <ul className=\"navbar-nav\">\r\n                    {\r\n                        !authToken ? \r\n                        <div className=\"links\">\r\n                        <li className=\"nav-item active\">\r\n                            <NavLink to=\"/login\" className=\"nav-link\">Login</NavLink> \r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/signup\" className=\"nav-link\">Sign Up</NavLink> \r\n                        </li>\r\n                        </div>\r\n                        :\r\n                        <div className=\"links\">\r\n                        <li className=\"nav-item active\">\r\n                            <NavLink to=\"/home\" className=\"nav-link\">Home *{process.env.PUBLIC_URL}*</NavLink> \r\n                        </li>\r\n                        <li className=\"nav-item active\">\r\n                            <NavLink to=\"/home\" className=\"nav-link\"><img className=\"logo\" src={shoppingCartImage} /></NavLink> \r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/products\" className=\"nav-link\">Products</NavLink> \r\n                        </li>\r\n                        <li className=\"nav-item \">\r\n                            <NavLink to=\"/my-profile/user-profile\" className=\"nav-link\">My Profile</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/cart\" className=\"nav-link\">Cart ({this.props.totalQuantity})</NavLink> \r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <input type=\"submit\" className=\"btn float-right login_btn\" value=\"Logout\" \r\n                        onClick={this.logoutSession} />\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <div className=\"float-right login _btn nav-link\">Hello Praveen!</div>\r\n                        </li>\r\n                        \r\n                        </div>\r\n                    }\r\n                \r\n                </ul>\r\n                </nav>\r\n                <div className=\"routesview\">\r\n                    {\r\n                        authToken ? \r\n                        <Switch>\r\n                        <Route path=\"/cart\" component={CartComponent}></Route>\r\n                        <Route path=\"/products\" component={ProductsComponent}></Route>\r\n                        <Route path=\"/my-profile\" component={MyProfile}></Route>\r\n                        <Route path=\"/login\" component={LoginComponent}></Route>\r\n                        <Route path=\"/product-view/:productId\" component={ProductViewComponent}></Route>\r\n                        <Route path=\"/home\" component={HomeComponent}></Route>\r\n                    </Switch>\r\n                    :\r\n                    <Switch>\r\n                        <Route path=\"/login\" component={LoginComponent}></Route>\r\n                        <Route path=\"/signup\" component={SignUpComponent}></Route>\r\n                        <Route path=\"/\" component={LoginComponent}></Route>\r\n                    </Switch>\r\n                    }\r\n                    \r\n                </div>\r\n            </Router>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    totalQuantity : state.cartList.totalQuantity,\r\n    isAuth : state.auth.isAuth\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    logout : logout\r\n};\r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(RoutesComponents);","import prods from \"../mocks/Products.json\";\r\n\r\nconst initialState = {\r\n    products : [],\r\n    viewList : []\r\n};\r\nexport default (state = initialState, action) => {\r\n    //console.log(action)\r\n    switch (action.type) {\r\n        case  \"GET_PRODUCTS_LIST\" :\r\n            return state;\r\n        case \"GET_PRODUCT_BY_ID\" :\r\n            return state;\r\n        case \"STORE_PRODUCTS\" :\r\n            return {\r\n                ...state,\r\n                products : action.payload\r\n            }\r\n        case \"INSERT_VIEWED_ITEM\":\r\n            return {\r\n                ...state,\r\n                viewList : [...state.viewList, action.payload]\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n\r\n}","const initialState = {\r\n    selectedItems:  [],\r\n    grandTotal : 0,\r\n    totalQuantity : 0\r\n};\r\nexport default (state = initialState, action) => {\r\n    //console.log(action);\r\n    switch (action.type) {\r\n        case  \"ADD_ITEM_TO_CART\" :\r\n            let currentProduct = action.payload;\r\n            let inCartItem = state.selectedItems.find(item => item.productID === currentProduct.productID)\r\n\r\n            if (inCartItem) {\r\n                inCartItem.quantity +=1; \r\n                inCartItem.itemTotalPrice = (inCartItem.quantity)*(inCartItem.price);\r\n                let grandTotal = state.grandTotal + inCartItem.price;\r\n                let totalQuantity = state.totalQuantity + 1\r\n                return {\r\n                    ...state,\r\n                    grandTotal: grandTotal,\r\n                    totalQuantity : totalQuantity\r\n                }\r\n\r\n            } else {\r\n                console.log(currentProduct, action.payload)\r\n                currentProduct.quantity = 1;\r\n                currentProduct.itemTotalPrice = (currentProduct.quantity)*(currentProduct.price);\r\n                let grandTotal = state.grandTotal + currentProduct.price;\r\n                let totalQuantity = state.totalQuantity + 1\r\n                return {\r\n                    ...state,\r\n                    selectedItems: [...state.selectedItems, currentProduct],\r\n                    grandTotal: grandTotal,\r\n                    totalQuantity : totalQuantity\r\n                } \r\n            }\r\n\r\n        case \"UPDATE_QUANTITY\" :\r\n            let inCartItemCurrent = state.selectedItems.find(item => item.productID === action.productID);\r\n            inCartItemCurrent.quantity = parseInt(action.newQuantity);\r\n            inCartItemCurrent.itemTotalPrice = inCartItemCurrent.quantity*inCartItemCurrent.price;\r\n            let grandTotal = state.selectedItems.reduce((total, each) => {\r\n                return total+parseInt(each.itemTotalPrice)\r\n            },0)\r\n            let totalQuantity = state.selectedItems.reduce((total, each)=>{\r\n                return total + parseInt(each.quantity)\r\n            },0)\r\n        return {\r\n            ...state,\r\n            totalQuantity:totalQuantity,\r\n            grandTotal:grandTotal\r\n        }\r\n\r\n        case \"INCR_QUANTITY\" : \r\n        let incCartItemCurrent = state.selectedItems.find(item => item.productID === action.productID);\r\n        console.log(incCartItemCurrent)\r\n        incCartItemCurrent.quantity =parseInt(incCartItemCurrent.quantity+1);\r\n        incCartItemCurrent.itemTotalPrice = incCartItemCurrent.quantity * incCartItemCurrent.price;\r\n        let iGrandTotal = state.grandTotal + incCartItemCurrent.price;\r\n        //let totalQuantity = state.totalQuantity + 1;\r\n        return {\r\n            ...state,\r\n            totalQuantity:state.totalQuantity + 1,\r\n            grandTotal: iGrandTotal\r\n        }\r\n        case \"DECR_QUANTITY\" : \r\n        let decCartItemCurrent = state.selectedItems.find(item => item.productID === action.productID);\r\n        decCartItemCurrent.quantity =parseInt(decCartItemCurrent.quantity-1);\r\n        decCartItemCurrent.itemTotalPrice = decCartItemCurrent.quantity * decCartItemCurrent.price;\r\n        let dGrandTotal = state.grandTotal - decCartItemCurrent.price;\r\n        // let totalQuantity = state.totalQuantity + 1;\r\n        return {\r\n            ...state,\r\n            totalQuantity:state.totalQuantity - 1,\r\n            grandTotal:dGrandTotal\r\n        }\r\n\r\n        case \"CLEAR_CART\" : \r\n        return {\r\n            grandTotal : 0,\r\n            totalQuantity : 0,\r\n            selectedItems : []\r\n        }\r\n        \r\n        default :\r\n        return state;\r\n    }\r\n\r\n}","const initialState = {\r\n    userInfo : {\r\n        //name : \"pr\"\r\n    }\r\n};\r\nexport default (state = initialState, action) => {\r\n    //console.log(action)\r\n    switch (action.type) {\r\n        case  \"SAVE_USER_PROFILE\" :\r\n            return {\r\n                ...state,\r\n                userInfo : action.payload\r\n            };\r\n        default :\r\n        return state;\r\n    }\r\n\r\n}","\r\nconst intialState = {\r\n    name : \"\",\r\n    isAuth : false\r\n}\r\n\r\nexport default (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\" : \r\n            return {\r\n                ...state,\r\n                isAuth : action.payload\r\n            };\r\n        case \"LOGOUT\" :\r\n            return {\r\n                ...state,\r\n                isAuth : action.payload\r\n            };\r\n        case \"SIGNUP\" :\r\n            return state;\r\n        default : return state;\r\n    }\r\n}","const initialState = {\r\n    loading : false,\r\n    response : false,\r\n    error : false\r\n};\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case  \"REQUEST_LOADING\" :\r\n            return {\r\n                ...state,\r\n                loading : true,\r\n                error : false\r\n            };\r\n\r\n        case \"REQUEST_SUCC\" : \r\n        return {\r\n            ...state,\r\n            loading : false,\r\n            error : false\r\n        }\r\n        case \"ERROR\" :\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                error : true\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n\r\n}","const initialState = {\r\n    orderedList : []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case 'MY_ORDERS' :\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'SAVE_ORDERS' :\r\n            return {\r\n                ...state,\r\n                orderedList : action.payload\r\n            }\r\n        default :\r\n        return state;\r\n\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport productsList from \"./reducers/productsListReducer\";\r\nimport cartList from \"./reducers/cartReducer\";\r\nimport userProfile from \"./reducers/userProfileReducer\";\r\nimport auth from './reducers/authReducer';\r\nimport loadingReducer from \"./reducers/loadingReducer\";\r\nimport orderReducer from \"./reducers/ordersReducer\";\r\n\r\nexport default combineReducers({\r\n    productsList, \r\n    cartList, \r\n    userProfile,\r\n    auth,\r\n    loadingReducer,\r\n    orders : orderReducer\r\n})","import { createStore, applyMiddleware, compose} from \"redux\";\r\nimport  thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from \"./rootReducer\";  \r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() || compose;\r\n\r\n// const composeEnhancers =\r\n//   typeof window === 'object' &&\r\n//   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n//       // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n//     }) : compose;\r\n\r\n//     const enhancer = composeEnhancers(\r\n//         applyMiddleware(...thunk),\r\n//         // other store enhancers if any\r\n//       );\r\n//const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n// const store = createStore(rootReducer, composeEnhancers);\r\n//const store = createStore(rootReducer, applyMiddleware(thunk));\r\n//const store = createStore(rootReducer, enhancer);\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n    applyMiddleware(thunk),\r\n    // other store enhancers if any\r\n  ));\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport RoutesComponents from \"./routes/routes\";\r\nimport store from \"./redux/store\";\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  render () {\r\n    return (\r\n      <Provider store={store}>\r\n      <div className=\"App\">\r\n        <RoutesComponents></RoutesComponents>\r\n      </div>\r\n      </Provider>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}