{"version":3,"sources":["components/Home/HomeComponent.js","constants.js","redux/actionTypes/cartActionTypes.js","redux/actionTypes/productsActionTypes.js","components/Products/Products.js","redux/actionTypes/loadingActionTypes.js","components/Cart/Cart.js","components/LoginComponent/LoginComponent.js","redux/actionTypes/authActionTypes.js","components/ProductViewComponent/ProductViewComponent.js","redux/actionTypes/userProfileActionTypes.js","components/UserProfile/UserProfile.js","redux/actionTypes/myOrdersActionTypes.js","components/MyOrders/MyOrders.js","components/MyProfile/MyProfile.js","components/SignUp/SignUpComponent.js","routes/routes.js","redux/reducers/productsListReducer.js","redux/reducers/cartReducer.js","redux/reducers/userProfileReducer.js","redux/reducers/authReducer.js","redux/reducers/loadingReducer.js","redux/reducers/ordersReducer.js","redux/rootReducer.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["HomeComponent","className","to","BE_BASEURL","history","createBrowserHistory","token","sessionStorage","getItem","AuthStr","concat","addItemToCart","item","dispatch","type","payload","ProductsComponent","props","productDetailedView","id","console","log","push","this","getAllProducts","prodList","productsList","products","map","prod","index","key","productID","src","imgUrl","alt","name","price","onClick","React","Component","connect","state","axios","get","then","res","catch","err","data","headers","dbProducts","CartComponent","incrementQnty","quantity","increamentQuantity","decrementQnty","decrementQuantity","ordetItems","buyProducts","userID","JSON","parse","selectedItems","grandTotal","totalQnty","totalQuantity","orderItems","event","target","value","newQuantity","updateQuantity","scope","itemTotalPrice","cartList","post","process","LoginComponent","inputHandler","fieldName","currentTarget","fieldValue","setState","loginForm","authenticateUser","preventDefault","accessToken","setItem","stringify","userPrincipal","login","alert","usernameOrEmail","password","onChange","mapDispatchToProps","isAuth","auth","ProductViewComponent","prodId","match","params","productId","getProductByID","viewList","brand","make","remarks","loading","loadingReducer","user","UserProfile","userInfo","updateProfile","loggedUser","newProfile","phoneNo","saveUserProfile","loadImage","profileImage","URL","createObjectURL","files","email","username","re","getUserInfo","userInfy","profile","htmlFor","defaultValue","placeholder","userProfile","profileInfo","formatDate","date","Date","myOrders","classNameName","orderedList","orders","purchaseDate","order","MyProfile","path","component","MyOrders","SignUpComponent","createAccount","singUpForm","success","message","class","RoutesComponents","logoutSession","removeItem","logout","authToken","basename","href","rel","initialState","intialState","response","error","combineReducers","action","currentProduct","inCartItem","find","inCartItemCurrent","parseInt","reduce","total","each","incCartItemCurrent","iGrandTotal","decCartItemCurrent","dGrandTotal","store","window","__REDUX_DEVTOOLS_EXTENSION__","compose","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fcd51134.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst HomeComponent = () => {\r\n    return (\r\n        <div className=\"main-home\">\r\n            <h1>Discover our wide range of <NavLink to=\"/products\">Products</NavLink></h1>\r\n            {/* <img src=\"https://drscdn.500px.org/photo/1013656596/q%3D80_m%3D2000_k%3D1/v2?sig=f1679a26ff5be146d25c5783126125711f05f26eea719205e308b63e5ee7fa87\"/> */}\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default HomeComponent;","export const BE_BASEURL = \"http://192.168.1.7:8080\";","import axios from 'axios';\r\nimport { createBrowserHistory } from 'history';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport { requestLoading, reqSucc, error } from \"./loadingActionTypes\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nlet token = sessionStorage.getItem(\"token\");\r\nconst AuthStr = 'Bearer '.concat(token);\r\n\r\nexport function addItemToCart(item) {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type : \"ADD_ITEM_TO_CART\",\r\n            payload : item\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function updateQuantity(newQuantity,productID) {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: \"UPDATE_QUANTITY\",\r\n            newQuantity,productID\r\n        })\r\n    }       \r\n}\r\n\r\nexport function decrementQuantity(productID) {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: \"DECR_QUANTITY\",\r\n            productID\r\n        })\r\n    }\r\n    \r\n}\r\n\r\nexport function increamentQuantity(productID) {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: \"INCR_QUANTITY\",\r\n            productID\r\n        })\r\n    }\r\n}\r\n\r\nexport function clearCart() {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: \"CLEAR_CART\"\r\n        });\r\n        \r\n    }\r\n}\r\n\r\nexport function orderItems(data) {\r\n    return (dispatch) => {\r\n\r\n      //  let hit = useHistory();\r\n\r\n    dispatch(requestLoading());\r\n    axios.post(BE_BASEURL+\"/api/products/orderItems\", data, \r\n    {\r\n      headers : {\r\n        \"Authorization\" :AuthStr,\r\n        \"Content-Type\" : \"application/json\"\r\n      }\r\n    }).then( res => {\r\n      dispatch(reqSucc());\r\n      dispatch(clearCart());\r\n      console.log(history)\r\n      //dispatch(push('/my-profile/my-orders'));\r\n      history.push(process.env.PUBLIC_URL+'/my-profile/my-orders')\r\n      //hit.push('/my-profile/my-orders');\r\n      //return <Redirect to='/my-profile/my-orders'  />\r\n    }).catch( err => {\r\n          console.log(err);\r\n          dispatch(error());\r\n          return err.data;\r\n    });\r\n\r\n\r\n    }\r\n}\r\n","\r\nimport axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport { requestLoading, reqSucc, error } from \"./loadingActionTypes\";\r\n\r\n\r\nlet token = sessionStorage.getItem(\"token\");\r\nconst AuthStr = 'Bearer '.concat(token);\r\n\r\n\r\nexport function getAllProducts() {\r\n    return (dispatch) => {\r\n    dispatch(requestLoading());\r\n\r\n\r\n    axios.get(\"https://192.168.1.5:8443/ssl-test\", \r\n    {\r\n    }).then( res => {\r\n        console.log(res)\r\n      dispatch(reqSucc());\r\n     // dispatch(storeProductsToRedux(res.data));\r\n    }).catch( err => {\r\n          console.log(err);\r\n          dispatch(error());\r\n          return err.data;\r\n    });\r\n\r\n    axios.get(BE_BASEURL+\"/api/products/getAllProducts\", \r\n    {\r\n      headers : {\r\n        \"Authorization\" :AuthStr,\r\n        \"Content-Type\" : \"application/json\",\r\n        //\"Access-Control-Allow-Origin\" : \"http://127.0.0.1:3000\"\r\n      }\r\n    }).then( res => {\r\n      dispatch(reqSucc());\r\n      dispatch(storeProductsToRedux(res.data));\r\n    }).catch( err => {\r\n          console.log(err);\r\n          dispatch(error());\r\n          return err.data;\r\n    });\r\n\r\n    }\r\n}\r\n\r\nexport function getProductByID(id){\r\n    return (dispatch) => {\r\n    dispatch(requestLoading());\r\n    axios.get(BE_BASEURL+\"/api/products/getById/\"+id, \r\n    {\r\n      headers : {\r\n        \"Authorization\" :AuthStr,\r\n        \"Content-Type\" : \"application/json\"\r\n      }\r\n    }).then( res => {\r\n      dispatch(storeInViewedList(res.data[0]))\r\n      dispatch(reqSucc());\r\n    }).catch( err => {\r\n          console.log(err);\r\n          dispatch(error());\r\n          return err.data;\r\n    });\r\n    }\r\n}\r\n\r\nexport function storeInViewedList (item) {\r\n    return (dispatch) =>{\r\n        dispatch({\r\n            type : \"INSERT_VIEWED_ITEM\",\r\n            payload : item\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProducts = () => ({\r\n    type: \"GET_PRODUCTS_LIST\",\r\n})\r\n\r\nexport function storeProductsToRedux(dbProducts) {\r\n    return (dispatch) => {\r\n        dispatch(\r\n            {\r\n                type : \"STORE_PRODUCTS\",\r\n                payload :dbProducts\r\n            }\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { addItemToCart } from \"../../redux/actionTypes/cartActionTypes\";\r\nimport { getAllProducts } from \"../../redux/actionTypes/productsActionTypes\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Products.css\"\r\n\r\nclass ProductsComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    \r\n    productDetailedView = (id) => {\r\n        console.log(id)\r\n        this.props.history.push(`/product-view/${id}`)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllProducts();\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props);\r\n        const prodList = this.props.productsList.products\r\n        return (\r\n            <div className=\"prod-main-container\">\r\n                <div className=\"list\">\r\n                {\r\n                    prodList.map((prod, index) => {\r\n                        return (\r\n                            <div className=\"prod-first\" key={prod.productID}>\r\n                                <div>\r\n                                    <NavLink to={`/product-view/${prod.productID}`}>\r\n                                        <img src={prod.imgUrl} className=\"img-fluid\"  alt=\"\"/>\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div className=\"prod-second\">\r\n                                    <h5>{prod.name}</h5>\r\n                                    <div className=\"price-tag\">&#x20b9; {prod.price}</div>\r\n                                    <div className=\"cart-btn\" onClick={()=>this.props.addItemToCart(prod)}>Add to Cart</div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                } </div>  \r\n           </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n ...state\r\n})\r\n\r\nconst mapDispatchToProps =  (dispatch) => {\r\n    return {\r\n        addItemToCart : (prod) => dispatch(addItemToCart(prod)),\r\n        getAllProducts : () => dispatch(getAllProducts())\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(ProductsComponent);","export const requestLoading = () => ({\r\n    type : \"REQUEST_LOADING\",\r\n})\r\n\r\nexport const reqSucc = () => ({\r\n    type : \"REQUEST_SUCC\"\r\n})\r\n\r\nexport const error = () => ({\r\n    type : \"ERROR\"\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    updateQuantity, \r\n    decrementQuantity, \r\n    increamentQuantity, \r\n    orderItems } from \"../../redux/actionTypes/cartActionTypes\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\nimport \"./Cart.css\"\r\nclass CartComponent extends React.Component {\r\n\r\n    updateQnty(event, productID) {\r\n        console.log(event.target.value);\r\n        let newQuantity = event.target.value\r\n        this.props.updateQuantity(newQuantity, productID)\r\n    }\r\n\r\n    incrementQnty = (item) => {\r\n        if (item.quantity >= 0) {\r\n            this.props.increamentQuantity(item.productID);\r\n        } else {\r\n            return null;\r\n        }\r\n        \r\n    }\r\n\r\n    decrementQnty = (item) => {\r\n        if (item.quantity === 0) {\r\n            return null;\r\n        } else {\r\n            this.props.decrementQuantity(item.productID);\r\n        }\r\n    }\r\n\r\n    ordetItems = () => {\r\n        let user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n        let buyProducts = {\r\n            userID : user.id,\r\n            products : this.props.selectedItems,\r\n            grandTotal : this.props.grandTotal,\r\n            totalQnty: this.props.totalQuantity\r\n\r\n        };\r\n        this.props.orderItems(buyProducts);\r\n        //this.props.history.push(\"/my-profile/my-orders\");\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            \r\n        <div className=\"cart-page\">\r\n            <div className=\"cart-body\">\r\n            <p className=\"total-price-qnty\">Grand Total & Quantity : &#x20b9; {this.props.grandTotal} & {this.props.totalQuantity}</p>\r\n            \r\n                <div className=\"col-12\">\r\n                    <table className=\"table table-image\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">Product ID</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Product Name</th>\r\n                        <th scope=\"col\">Quantity</th>\r\n                        {/* <th scope=\"col\">New Quantity</th> */}\r\n                        <th scope=\"col\">Price/Each</th>\r\n                        <th scope=\"col\">Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.props.selectedItems.map(item => {\r\n                            return (<tr>\r\n                                <td scope=\"row\">{item.productID}</td>\r\n                                <td className=\"w-25\">\r\n                                    <NavLink to={`/product-view/${item.productID}`}>\r\n                                     <img src={item.imgUrl} className=\"img-fluid cart-image-width img-thumbnail\"\r\n                                      alt={item.name}/>\r\n                                    </NavLink>\r\n                                </td>\r\n                                <td>{item.name}</td>\r\n                                <td>\r\n                                    <button onClick={()=>this.incrementQnty(item)}>+</button>{item.quantity}\r\n                                    <button onClick={()=>this.decrementQnty(item)}>-</button>\r\n                                </td>\r\n                                {/* <td> \r\n                                    <input type=\"text\" onChange={(event)=>this.updateQnty(event, item.productID)}/>\r\n                                </td> */}\r\n                                <td>&#x20b9; {item.price}</td>\r\n                                <td>&#x20b9; {item.itemTotalPrice}</td>\r\n                            </tr>)\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                    </table>  \r\n                    <button className=\"my-btn\" onClick={this.ordetItems}>Buy Now</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n                        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    selectedItems : state.cartList.selectedItems,\r\n    grandTotal : state.cartList.grandTotal,\r\n    totalQuantity: state.cartList.totalQuantity\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateQuantity : () => dispatch(updateQuantity()),\r\n        decrementQuantity : (id) => dispatch(decrementQuantity(id)),\r\n        increamentQuantity : (id) => dispatch(increamentQuantity(id)),\r\n        orderItems : (data) => dispatch(orderItems(data))\r\n    }\r\n    \r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(CartComponent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport GoogleLogin from 'react-google-login';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport { login } from \"../../redux/actionTypes/authActionTypes\";\r\n\r\n\r\n\r\n//axios.defaults.baseURL = 'https://api.example.com';\r\n//axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\n//axios.defaults.headers.common['Access-Control-Allow-Method'] = 'DELETE, POST, GET, OPTIONS';\r\n//axios.defaults.headers.common['Access-Control-Allow-Headers'] = '\"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"';\r\n\r\n//axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\nclass LoginComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        loginForm : {\r\n          usernameOrEmail : \"\",\r\n          password : \"\"\r\n    }\r\n    }\r\n}\r\n\r\n    // signup(res) {\r\n        \r\n    //         const googleresponse = {\r\n        \r\n    //           Name: res.profileObj.name,\r\n        \r\n    //           email: res.profileObj.email,\r\n        \r\n    //           token: res.googleId,\r\n        \r\n    //           Image: res.profileObj.imageUrl,\r\n        \r\n    //           ProviderId: 'Google'\r\n        \r\n    //         };\r\n        \r\n    //         console.log(googleresponse);\r\n    //         this.props.history.push('/products')\r\n            \r\n        \r\n    //         // axios.post('http://localhost:60200/Api/Login/SocialmediaData', googleresponse)\r\n        \r\n    //         //   .then((result) => {\r\n        \r\n    //         //     let responseJson = result;\r\n        \r\n    //         //     sessionStorage.setItem(\"userData\", JSON.stringify(result));\r\n        \r\n    //         //     this.props.history.push('/Dashboard')\r\n        \r\n    //         //   });\r\n        \r\n    //       };\r\n\r\n    inputHandler = (event) => {\r\n      let fieldName =event.currentTarget.name;\r\n      let fieldValue = event.target.value;\r\n\r\n      this.setState((state) => {\r\n        state.loginForm[fieldName] = fieldValue;\r\n    })\r\n\r\n    }\r\n\r\n    authenticateUser = (event) => {\r\n      event.preventDefault();\r\n        axios.post(BE_BASEURL+\"/api/auth/signin\", this.state.loginForm,\r\n        {\r\n          headers : {\r\n            //authorization :\"Basic \"+ window.btoa(INSTRUCTOR + \":\" + PASSWORD)\r\n            \"Access-Control-Allow-Origin\" : \"*\"\r\n          }\r\n        })\r\n        .then((res)=> {\r\n            console.log(res);\r\n            if (res.data.accessToken) {\r\n                // TODO more on session creation\r\n                sessionStorage.setItem(\"token\",res.data.accessToken);\r\n                sessionStorage.setItem(\"user\",JSON.stringify(res.data.userPrincipal));\r\n                this.props.login(res.data.accessToken);\r\n                this.props.history.push('/products')\r\n            } else {\r\n                alert(\"Login failed\");\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    \r\n    render () {\r\n\r\n\r\n        // const responseGoogle = (response) => {\r\n        \r\n        //     console.log(response);\r\n      \r\n        //     var res = response.profileObj;\r\n      \r\n        //     console.log(res);\r\n      \r\n        //     //debugger;\r\n      \r\n        //     this.signup(response);\r\n      \r\n        //   }\r\n\r\n        return (\r\n            \r\n        <div className=\"main-container\">\r\n\r\n        {/* <div className=\"google-sign-in-btn\">\r\n\r\n              <GoogleLogin\r\n\r\n                clientId=\"464944719379-h84i67v34o9ivp8h49np2htm96bjsj08.apps.googleusercontent.com\"\r\n\r\n                buttonText=\"Login with Google\"\r\n\r\n                onSuccess={responseGoogle}\r\n\r\n                onFailure={responseGoogle} ></GoogleLogin>\r\n\r\n        </div>  */}\r\n\r\n        <div className=\"from-wrap\">\r\n          <h1>Log In</h1>\r\n          <p>To access your services</p>\r\n          <form>\r\n          <div className=\"form-group\">\r\n            <label>Username or Email</label>\r\n            <input type=\"text\" name=\"usernameOrEmail\" className=\"form-control\"\r\n             onChange={this.inputHandler}/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\"\r\n             className=\"form-control\" onChange={this.inputHandler}/>\r\n          </div>\r\n          <button className=\"my-btn\" onClick={this.authenticateUser}>Log In</button>\r\n          <p className=\"align -left\">Don't have an account?<NavLink to=\"/signup\">Sign Up</NavLink></p>\r\n\r\n        </form>\r\n\r\n        </div>\r\n        </div>\r\n                        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n  isAuth : state.auth.isAuth\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  login : login\r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(LoginComponent);","\r\nexport const login = (res) => ({\r\n    type : \"LOGIN\",\r\n    payload : res\r\n})\r\n\r\nexport const logout = () => ({\r\n            type: \"LOGOUT\",\r\n            payload : false\r\n})\r\n\r\n","import React from 'react';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from \"react-redux\";\r\nimport { addItemToCart, updateQuantity } from \"../../redux/actionTypes/cartActionTypes\";\r\nimport { getProductByID, getProducts } from \"../../redux/actionTypes/productsActionTypes\"\r\nimport './productView.css'\r\n\r\nclass ProductViewComponent extends React.Component {\r\n    \r\n\r\n    componentDidMount() {\r\n        const prodId =  this.props.match.params.productId;\r\n        this.props.getProductByID(prodId);\r\n    }\r\n\r\n    render () {\r\n        const prodId = this.props.match.params.productId;\r\n        const viewList = this.props.viewList;\r\n      \r\n\r\n        return (\r\n        <div className=\"prd-view-container\">\r\n            <div className=\"prod-details\">\r\n                {\r\n                    viewList.map(item => {\r\n                        if (item.productID == prodId) {\r\n                            return (\r\n                                <div className=\"item-body\" key={item.productID}>\r\n                                    <div className=\"prd-pic\">\r\n                                        <img className=\"card-img-top\" src={item.imgUrl} alt=\"Shoes\"/>\r\n                                    </div>\r\n                                    <div className=\"prd-spec\">\r\n                                    <h5 className=\"card-title\">{item.name}</h5>\r\n                                    <div className=\"card-text\">Price : &#x20b9; {item.price}</div>\r\n                                    <div className=\"card-text\" >Brand : {item.brand}</div>\r\n                                    <div className=\"card-text\" >Made in : {item.make}</div>\r\n                                    <div className=\"card-text\" >Remarks : {item.remarks}</div>\r\n                                    <div className=\"view-cart-btn\" onClick={()=>this.props.addItemToCart(item)}>Add to Cart</div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    ...state,\r\n    viewList : state.productsList.viewList,\r\n    loading : state.loadingReducer\r\n})\r\n   \r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        addItemToCart: (item) => dispatch(addItemToCart(item)), \r\n        getProductByID : (id)=>dispatch(getProductByID(id)),\r\n    }\r\n    \r\n   }\r\n   \r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(ProductViewComponent);","import axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport { requestLoading, reqSucc, error } from \"./loadingActionTypes\";\r\n\r\n// export const saveUserProfile = (user) => ({\r\n//     type : \"SAVE_USER_PROFILE\",\r\n//     user\r\n// })\r\n\r\nlet token = sessionStorage.getItem(\"token\");\r\nlet user = JSON.parse(sessionStorage.getItem(\"user\"));\r\nconst AuthStr = 'Bearer '.concat(token);\r\n\r\nexport function saveUserProfile(profileInfo) {\r\n  return (dispatch) => {\r\n    dispatch(requestLoading());\r\n    axios.post(BE_BASEURL+\"/api/users/saveUser\", profileInfo, \r\n    {\r\n      headers : {\r\n        \"Authorization\" :AuthStr,\r\n        \"Content-Type\" : \"application/json\"\r\n      }\r\n    }).then( res => {\r\n      dispatch({\r\n        type : \"SAVE_USER_PROFILE\",\r\n        payload : res.data\r\n      });\r\n      dispatch(reqSucc());\r\n    }).catch( err => {\r\n          console.log(err);\r\n          dispatch(error());\r\n          return err.data;\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport function getUserInfo() {\r\n\r\n    return (dispatch) => {\r\n\r\n      dispatch(requestLoading());\r\n        \r\n        axios.get(BE_BASEURL+\"/api/users/\"+user.username,\r\n        {\r\n          headers : {\r\n            \"Authorization\" :AuthStr,\r\n            \"Content-Type\" : \"application/json\"\r\n          }\r\n        }).then( (res) => {\r\n          //this.props.saveUserProfile(res.data);\r\n          dispatch({\r\n            type : \"SAVE_USER_PROFILE\",\r\n            payload : res.data\r\n          })\r\n          console.log(res);\r\n          dispatch(reqSucc());\r\n          return res.data;\r\n        }).catch((err) => {\r\n          console.log(err);\r\n          dispatch(error());\r\n          return err.data;\r\n        })\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport { saveUserProfile, getUserInfo } from \"../../redux/actionTypes/userProfileActionTypes\";\r\nimport \"./UserProfile.css\"\r\n\r\nclass UserProfile extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userInfo : {\r\n      phoneNo : \"\",\r\n      name : \"\",\r\n      email : \"\",\r\n      username : \"\"\r\n      },\r\n      token : \"\",\r\n      profileImage : \"\"\r\n    }\r\n  }\r\n\r\n  inputHandler = (event) => {\r\n    let fieldName =event.currentTarget.name;\r\n    let fieldValue = event.target.value;\r\n    console.log(fieldName, fieldValue);\r\n    this.setState((state) => {\r\n        state.userInfo[fieldName] = fieldValue;\r\n        console.log(state.userInfo)\r\n    })\r\n  }\r\n\r\n  updateProfile = (event) => {\r\n    let loggedUser = JSON.parse(sessionStorage.getItem(\"user\"));\r\n    let newProfile = {\r\n      name : this.state.userInfo.name,\r\n      phoneNo : this.state.userInfo.phoneNo,\r\n      userID : loggedUser.id\r\n    };\r\n    event.preventDefault();\r\n    this.props.saveUserProfile(newProfile);\r\n    console.log(this.state.userInfo, this.state.token);\r\n  }\r\n\r\n  loadImage = (event) => {\r\n    this.setState({\r\n      profileImage: URL.createObjectURL(event.target.files[0])\r\n    })\r\n  }\r\n\r\nshouldComponentUpdate() {\r\n  console.log(this.state)\r\n  return true;\r\n}\r\n\r\ncomponentDidMount() {\r\n  const re = this.props.getUserInfo();\r\n  console.log(re)\r\n}\r\n\r\n\r\nrender() {\r\n\r\n  const { name, email, username, phoneNo }= this.props.userInfy;\r\n  \r\n   const profile = (!this.props.loading) ? \r\n     <div className=\"profile-from-wrap\">\r\n          <h1>Profile Information</h1>\r\n          <form>\r\n            <div className=\"profile-pic-sec\">\r\n              {/* <input type=\"file\" onChange={this.loadImage}/> */}\r\n              <img  className=\"profile-pic\" src={this.state.profileImage}/>\r\n              <input id=\"praveen\" type=\"file\" className=\"km-btn-file\" onChange={this.loadImage} ></input>\r\n              <label htmlFor=\"praveen\" className=\"km-button km-button--primary km-btn-file-label\">\r\n                  <span>Upload</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Full Name</label>\r\n              <input type=\"text\" defaultValue={name} name=\"name\" placeholder=\"full name\"\r\n              onChange={this.inputHandler}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Phone Number</label>\r\n              <input type=\"text\" defaultValue={phoneNo} name=\"phoneNo\" placeholder=\"phone no\"\r\n              className=\"form-control\" onChange={this.inputHandler} />\r\n            </div>\r\n            <button className=\"my-btn\" onClick={this.updateProfile}>Update Profile</button>\r\n          </form>\r\n      </div>\r\n   :  <div>...Loading</div>\r\n\r\n  return (\r\n            <div className=\"\">\r\n                <div className=\"\">\r\n                    {profile}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n}\r\n    \r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n   loading : state.loadingReducer.loading,\r\n   userInfy : state.userProfile.userInfo\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  console.log(dispatch);\r\n  return {\r\n    saveUserProfile : (data) => dispatch(saveUserProfile(data)),\r\n    getUserInfo : () => dispatch(getUserInfo())\r\n  }\r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(UserProfile);","import axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\nimport { requestLoading, reqSucc, error } from \"./loadingActionTypes\";\r\n\r\n\r\nlet token = sessionStorage.getItem(\"token\");\r\nlet user = JSON.parse(sessionStorage.getItem(\"user\"));\r\nconst AuthStr = 'Bearer '.concat(token);\r\nconsole.log(user)\r\n\r\nexport function myOrders() {\r\n    return (dispatch) => {\r\n\r\n    dispatch(requestLoading());\r\n    axios.get(BE_BASEURL+\"/api/products/myOrders/\"+user.id, \r\n    {\r\n      headers : {\r\n        \"Authorization\" :AuthStr,\r\n        \"Content-Type\" : \"application/json\"\r\n      }\r\n    }).then( res => {\r\n      dispatch(saveOrders(res.data));\r\n      dispatch(reqSucc());\r\n      console.log(res);\r\n    }).catch( err => {\r\n          console.log(err);\r\n          dispatch(error());\r\n          return err.data;\r\n    });\r\n\r\n    }\r\n} \r\n\r\n\r\nexport function saveOrders(orders) {\r\n    return (dispatch)=> {\r\n        dispatch({\r\n            type : \"SAVE_ORDERS\",\r\n            payload : orders\r\n        })\r\n    }\r\n}\r\n\r\n// export function myOrders() {\r\n//     return (dispatch) => {\r\n//         dispatch({\r\n//             type : \"MY_ORDERS\"\r\n//         })\r\n//     }\r\n// }","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { myOrders } from \"../../redux/actionTypes/myOrdersActionTypes\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./myOrders.css\"\r\n\r\nclass UserProfile extends React.Component  {\r\n\r\n    componentDidMount() {\r\n        this.props.myOrders();\r\n    }\r\n\r\n    formatDate = (date) =>{\r\n        return new Date(date);\r\n    }\r\n    render() {\r\n    return (\r\n        <div classNameName=\"orders-container\">\r\n            <h1>Your Orders</h1>\r\n            {\r\n                this.props.orderedList.map(orders => {\r\n                    return (\r\n                        <div className=\"\">\r\n                            <h2>Purchase Date : {`${new Date(orders.purchaseDate)}`}</h2>\r\n                            {\r\n                                orders.products.map(order => {\r\n                                    return(\r\n                                    <div className=\"order-list\">\r\n                                        <NavLink to={`/product-view/${order.productID}`}>\r\n                                            <img src={order.imgUrl} className=\"order-img\"/>\r\n                                        </NavLink>\r\n                                        <div className=\"single-order\">\r\n                                            <div className=\"ord-detail\">\r\n                                                <div className=\"lable\">Name</div>\r\n                                                <div className=\"value\">{order.name}</div>\r\n                                            </div>\r\n                                            <div className=\"ord-detail\">\r\n                                                <div className=\"lable\">Price</div>\r\n                                                <div className=\"value currency\">&#x20b9; {order.price}</div>\r\n                                            </div>\r\n                                            <div className=\"ord-detail\">\r\n                                                <div className=\"lable\">Quantity</div>\r\n                                                <div className=\"value\">{order.quantity}</div>\r\n                                            </div>\r\n                                            <div className=\"ord-detail\">\r\n                                                <div className=\"lable\">Total Price</div>\r\n                                                <div className=\"value currency\">&#x20b9; {order.itemTotalPrice}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    )\r\n                    \r\n                })\r\n            }       \r\n        </div>     \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    orderedList : state.orders.orderedList\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        myOrders : () => dispatch(myOrders())\r\n    }\r\n};\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(UserProfile);","import React from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nimport UserProfile from \"../UserProfile/UserProfile\";\r\nimport MyOrders from \"../MyOrders/MyOrders\";\r\nimport \"./MyProfile.css\"\r\n\r\nfunction MyProfile() {\r\n    return (\r\n            <div className=\"profile-page\">\r\n\t\t            <ul className=\"profile-side-nav\">\r\n                        <li><NavLink to=\"/my-profile/user-profile\">User Profile</NavLink></li>\r\n                        <li><NavLink to=\"/my-profile/my-orders\">My Orders</NavLink></li>\r\n\t\t            </ul>\r\n\t\t            <div className=\"profile-main-body\">\r\n                        <Switch>\r\n                            <Route path=\"/my-profile/user-profile\" component={UserProfile}></Route>\r\n                            <Route path=\"/my-profile/my-orders\" component={MyOrders}></Route>\r\n                         </Switch>        \r\n\t\t            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default MyProfile;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { BE_BASEURL } from \"../../constants\";\r\n\r\n\r\nclass SignUpComponent extends React.Component { \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            singUpForm : {\r\n                name : \"\",\r\n                email : \"\",\r\n                username : \"\",\r\n                password : \"\"\r\n        }\r\n        }\r\n    }\r\n\r\n    createAccount = (event) => {\r\n\r\n        event.preventDefault();\r\n        axios.post(BE_BASEURL+\"/api/auth/signup\",\r\n        {\r\n            headers : {\r\n              //authorization :\"Basic \"+ window.btoa(INSTRUCTOR + \":\" + PASSWORD)\r\n              \"Access-Control-Allow-Origin\" : \"*\"\r\n            }\r\n          }, this.state.singUpForm)\r\n        .then((res)=> {\r\n            console.log(res);\r\n            if (res.data.success === true) {\r\n                this.props.history.push(\"/login\")\r\n            } else if (res.data.success === false) {\r\n                console.log(res.data.message);\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    inputHandler = (event) => {\r\n        let fieldName =event.currentTarget.name;\r\n        let fieldValue = event.target.value;\r\n        this.setState((state) => {\r\n            state.singUpForm[fieldName] = fieldValue;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"main-container\">\r\n                <div className=\"from-wrap\">\r\n                <h1>Sign Up</h1>\r\n                <p>Get started with your free account</p>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>Full Name</label>\r\n                        <input name=\"name\" type=\"text\" onChange={this.inputHandler} placeholder=\"Full name\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input name=\"email\" className=\"form-control\" onChange={this.inputHandler} placeholder=\"Email address\" type=\"email\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input name=\"username\" className=\"form-control\" onChange={this.inputHandler} placeholder=\"Enter username\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input name=\"password\" className=\"form-control\" onChange={this.inputHandler} placeholder=\"Create password\" type=\"password\" />\r\n                    </div>\r\n                    <button className=\"my-btn\" onClick={this.createAccount}>Create Account</button>\r\n                    <p className=\"align -left\">Have an account?<NavLink to=\"/login\">Log In</NavLink></p>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUpComponent;","import React from 'react'; \r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport HomeComponent from \"../components/Home/HomeComponent\";\r\nimport ProductsComponent from \"../components/Products/Products\";\r\nimport CartComponent from \"../components/Cart/Cart\";\r\nimport LoginComponent from '../components/LoginComponent/LoginComponent';\r\nimport ProductViewComponent from \"../components/ProductViewComponent/ProductViewComponent\";\r\nimport MyProfile from \"../components/MyProfile/MyProfile\";\r\nimport SignUpComponent from \"../components/SignUp/SignUpComponent\";\r\nimport { logout } from \"../redux/actionTypes/authActionTypes\";\r\n\r\nimport './routes.css'\r\n\r\n\r\n//const history = require('history').createBrowserHistory;\r\n\r\nclass RoutesComponents extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    logoutSession = () => {\r\n        sessionStorage.removeItem(\"token\");\r\n        sessionStorage.removeItem(\"user\");\r\n        this.props.logout(null);\r\n        //this.props.history.push(\"/login\");\r\n        //this.props.history.push('/products')\r\n\r\n        //this.props.history.push('/signup')\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        console.log(process.env.PUBLIC_URL);\r\n        \r\n        const authToken = sessionStorage.getItem(\"token\");\r\n        console.log(authToken);\r\n        let basename = process.env.PUBLIC_URL;\r\n\r\n        return (\r\n            \r\n            <Router basename={basename}> \r\n                <nav className=\"routing\">\r\n                    {\r\n                        !authToken ? \r\n                        <h1 className=\"before-signin\">Shopping <span className=\"header-cart\">Cart</span></h1>\r\n                        :\r\n                        <div>\r\n                        <h1 >\r\n                            <NavLink to=\"/home\" className=\"nav-link\">Shopping <span className=\"header-cart\">Cart</span></NavLink> \r\n                        </h1>\r\n                        <ul className=\"before-sign-in\">\r\n                        <li >\r\n                            <NavLink to=\"/home\" className=\"nav-link\">Home</NavLink> \r\n                        </li>\r\n                        <li >\r\n                            <NavLink to=\"/products\" className=\"nav-link\">Products</NavLink> \r\n                        </li>\r\n                        <li >\r\n                            <NavLink to=\"/my-profile/user-profile\" className=\"nav-link\">My Profile</NavLink>\r\n                        </li>\r\n                        <li >\r\n                            <NavLink to=\"/cart\" className=\"nav-link\">Cart ({this.props.totalQuantity})</NavLink> \r\n                        </li>\r\n                        <li >\r\n                        <input type=\"submit\" className=\"logout-btn\" value=\"Logout\" \r\n                        onClick={this.logoutSession} />\r\n                        </li>\r\n                        </ul>\r\n                        </div>\r\n                    }\r\n                </nav>\r\n                <div className=\"routesview\">\r\n                    {\r\n                        authToken ? \r\n                        <Switch>\r\n                        <Route path=\"/cart\" component={CartComponent}></Route>\r\n                        <Route path=\"/products\" component={ProductsComponent}></Route>\r\n                        <Route path=\"/my-profile\" component={MyProfile}></Route>\r\n                        <Route path=\"/login\" component={LoginComponent}></Route>\r\n                        <Route path=\"/product-view/:productId\" component={ProductViewComponent}></Route>\r\n                        <Route path=\"/home\" component={HomeComponent}></Route>\r\n                        <Route path=\"/\" component={HomeComponent}></Route>\r\n                    </Switch>\r\n                    :\r\n                    <Switch>\r\n                        <Route path=\"/login\" component={LoginComponent}></Route>\r\n                        <Route path=\"/signup\" component={SignUpComponent}></Route>\r\n                        <Route path=\"/\" component={LoginComponent}></Route>\r\n                    </Switch>\r\n                    }\r\n                    \r\n                </div>\r\n                <footer id=\"footer\">\r\n                        <a\r\n                    href=\"https://github.com/arepalli-praveenkumar/shopping-cart\"\r\n                    className=\"github_link\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    >OPEN SOURCED on GITHUB</a>\r\n\r\n            </footer>\r\n            </Router>\r\n            \r\n            \r\n                \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStatesToProps = (state) => ({\r\n    totalQuantity : state.cartList.totalQuantity,\r\n    isAuth : state.auth.isAuth\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    logout : logout\r\n};\r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(RoutesComponents);","import prods from \"../mocks/Products.json\";\r\n\r\nconst initialState = {\r\n    products : [],\r\n    viewList : []\r\n};\r\nexport default (state = initialState, action) => {\r\n    //console.log(action)\r\n    switch (action.type) {\r\n        case  \"GET_PRODUCTS_LIST\" :\r\n            return state;\r\n        case \"GET_PRODUCT_BY_ID\" :\r\n            return state;\r\n        case \"STORE_PRODUCTS\" :\r\n            return {\r\n                ...state,\r\n                products : action.payload\r\n            }\r\n        case \"INSERT_VIEWED_ITEM\":\r\n            return {\r\n                ...state,\r\n                viewList : [...state.viewList, action.payload]\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n\r\n}","const initialState = {\r\n    selectedItems:  [],\r\n    grandTotal : 0,\r\n    totalQuantity : 0\r\n};\r\nexport default (state = initialState, action) => {\r\n    //console.log(action);\r\n    switch (action.type) {\r\n        case  \"ADD_ITEM_TO_CART\" :\r\n            let currentProduct = action.payload;\r\n            let inCartItem = state.selectedItems.find(item => item.productID === currentProduct.productID)\r\n\r\n            if (inCartItem) {\r\n                inCartItem.quantity +=1; \r\n                inCartItem.itemTotalPrice = (inCartItem.quantity)*(inCartItem.price);\r\n                let grandTotal = state.grandTotal + inCartItem.price;\r\n                let totalQuantity = state.totalQuantity + 1\r\n                return {\r\n                    ...state,\r\n                    grandTotal: grandTotal,\r\n                    totalQuantity : totalQuantity\r\n                }\r\n\r\n            } else {\r\n                console.log(currentProduct, action.payload)\r\n                currentProduct.quantity = 1;\r\n                currentProduct.itemTotalPrice = (currentProduct.quantity)*(currentProduct.price);\r\n                let grandTotal = state.grandTotal + currentProduct.price;\r\n                let totalQuantity = state.totalQuantity + 1\r\n                return {\r\n                    ...state,\r\n                    selectedItems: [...state.selectedItems, currentProduct],\r\n                    grandTotal: grandTotal,\r\n                    totalQuantity : totalQuantity\r\n                } \r\n            }\r\n\r\n        case \"UPDATE_QUANTITY\" :\r\n            let inCartItemCurrent = state.selectedItems.find(item => item.productID === action.productID);\r\n            inCartItemCurrent.quantity = parseInt(action.newQuantity);\r\n            inCartItemCurrent.itemTotalPrice = inCartItemCurrent.quantity*inCartItemCurrent.price;\r\n            let grandTotal = state.selectedItems.reduce((total, each) => {\r\n                return total+parseInt(each.itemTotalPrice)\r\n            },0)\r\n            let totalQuantity = state.selectedItems.reduce((total, each)=>{\r\n                return total + parseInt(each.quantity)\r\n            },0)\r\n        return {\r\n            ...state,\r\n            totalQuantity:totalQuantity,\r\n            grandTotal:grandTotal\r\n        }\r\n\r\n        case \"INCR_QUANTITY\" : \r\n        let incCartItemCurrent = state.selectedItems.find(item => item.productID === action.productID);\r\n        console.log(incCartItemCurrent)\r\n        incCartItemCurrent.quantity =parseInt(incCartItemCurrent.quantity+1);\r\n        incCartItemCurrent.itemTotalPrice = incCartItemCurrent.quantity * incCartItemCurrent.price;\r\n        let iGrandTotal = state.grandTotal + incCartItemCurrent.price;\r\n        //let totalQuantity = state.totalQuantity + 1;\r\n        return {\r\n            ...state,\r\n            totalQuantity:state.totalQuantity + 1,\r\n            grandTotal: iGrandTotal\r\n        }\r\n        case \"DECR_QUANTITY\" : \r\n        let decCartItemCurrent = state.selectedItems.find(item => item.productID === action.productID);\r\n        decCartItemCurrent.quantity =parseInt(decCartItemCurrent.quantity-1);\r\n        decCartItemCurrent.itemTotalPrice = decCartItemCurrent.quantity * decCartItemCurrent.price;\r\n        let dGrandTotal = state.grandTotal - decCartItemCurrent.price;\r\n        // let totalQuantity = state.totalQuantity + 1;\r\n        return {\r\n            ...state,\r\n            totalQuantity:state.totalQuantity - 1,\r\n            grandTotal:dGrandTotal\r\n        }\r\n\r\n        case \"CLEAR_CART\" : \r\n        return {\r\n            grandTotal : 0,\r\n            totalQuantity : 0,\r\n            selectedItems : []\r\n        }\r\n        \r\n        default :\r\n        return state;\r\n    }\r\n\r\n}","const initialState = {\r\n    userInfo : {\r\n        //name : \"pr\"\r\n    }\r\n};\r\nexport default (state = initialState, action) => {\r\n    //console.log(action)\r\n    switch (action.type) {\r\n        case  \"SAVE_USER_PROFILE\" :\r\n            return {\r\n                ...state,\r\n                userInfo : action.payload\r\n            };\r\n        default :\r\n        return state;\r\n    }\r\n\r\n}","\r\nconst intialState = {\r\n    name : \"\",\r\n    isAuth : false\r\n}\r\n\r\nexport default (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\" : \r\n            return {\r\n                ...state,\r\n                isAuth : action.payload\r\n            };\r\n        case \"LOGOUT\" :\r\n            return {\r\n                ...state,\r\n                isAuth : action.payload\r\n            };\r\n        case \"SIGNUP\" :\r\n            return state;\r\n        default : return state;\r\n    }\r\n}","const initialState = {\r\n    loading : false,\r\n    response : false,\r\n    error : false\r\n};\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case  \"REQUEST_LOADING\" :\r\n            return {\r\n                ...state,\r\n                loading : true,\r\n                error : false\r\n            };\r\n\r\n        case \"REQUEST_SUCC\" : \r\n        return {\r\n            ...state,\r\n            loading : false,\r\n            error : false\r\n        }\r\n        case \"ERROR\" :\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                error : true\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n\r\n}","const initialState = {\r\n    orderedList : []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case 'MY_ORDERS' :\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'SAVE_ORDERS' :\r\n            return {\r\n                ...state,\r\n                orderedList : action.payload\r\n            }\r\n        default :\r\n        return state;\r\n\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport productsList from \"./reducers/productsListReducer\";\r\nimport cartList from \"./reducers/cartReducer\";\r\nimport userProfile from \"./reducers/userProfileReducer\";\r\nimport auth from './reducers/authReducer';\r\nimport loadingReducer from \"./reducers/loadingReducer\";\r\nimport orderReducer from \"./reducers/ordersReducer\";\r\n\r\nexport default combineReducers({\r\n    productsList, \r\n    cartList, \r\n    userProfile,\r\n    auth,\r\n    loadingReducer,\r\n    orders : orderReducer\r\n})","import { createStore, applyMiddleware, compose} from \"redux\";\r\nimport  thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from \"./rootReducer\";  \r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() || compose;\r\n\r\n// const composeEnhancers =\r\n//   typeof window === 'object' &&\r\n//   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n//       // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n//     }) : compose;\r\n\r\n//     const enhancer = composeEnhancers(\r\n//         applyMiddleware(...thunk),\r\n//         // other store enhancers if any\r\n//       );\r\n//const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n// const store = createStore(rootReducer, composeEnhancers);\r\n//const store = createStore(rootReducer, applyMiddleware(thunk));\r\n//const store = createStore(rootReducer, enhancer);\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n    applyMiddleware(thunk),\r\n    // other store enhancers if any\r\n  ));\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport RoutesComponents from \"./routes/routes\";\r\nimport store from \"./redux/store\";\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  render () {\r\n    return (\r\n      <Provider store={store}>\r\n      <div className=\"App\">\r\n        <RoutesComponents></RoutesComponents>\r\n      </div>\r\n      </Provider>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}